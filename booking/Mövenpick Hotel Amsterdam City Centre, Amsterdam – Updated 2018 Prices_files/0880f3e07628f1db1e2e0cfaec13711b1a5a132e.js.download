var _i_ = this._i_ || function() {}, _r_ = this._r_ || function(e) {
return e;
};

booking.env.enable_scripts_tracking && (booking.env.scripts_tracking.atlas = {
loaded:!0,
run:!1
}), function() {
"use strict";
_i_("d0b:71521644");
var e = "Atlas/";
function t(t) {
return _i_("d0b:212232c8"), _r_(e + t);
}
function r(e, r) {
_i_("d0b:a50b4c09");
var i = [].slice.call(arguments, 0);
return "string" == typeof e ? i[0] = t(e) :Array.isArray(e) ? i[0] = e.map(t) :Array.isArray(r) && (i[1] = e.map(t)), _r_(B.require.apply(this, i));
}
function i(e, r) {
_i_("d0b:28581426");
var i = [].slice.call(arguments, 0);
i[0] = t(e), Array.isArray(r) && (i[1] = r.map(t)), B.define.apply(this, i), _r_();
}
B.atlas = B.atlas || {
requirejs:r,
require:r,
define:i
}, _r_();
}(), B.atlas.define("jQuery", function() {
return _i_("d0b:8eac1abf"), _r_(B.require("jquery"));
}), B.atlas.define("util-array", function() {
"use strict";
_i_("d0b:ff6abcd2");
function e(e) {
if (_i_("d0b:1304ce7b"), !Array.isArray) return _r_("[object Array]" === Object.prototype.toString.call(e));
return _r_(Array.isArray(e));
}
function t(t, r) {
_i_("d0b:6c8b399a");
var i, n, a;
if (!e(t)) return _r_(a);
if (Array.prototype.find) return _r_(t.find(r));
for (i = 0, n = t.length; n > i; i++) if (r.call(t, t[i], i, t)) return _r_(t[i]);
return _r_(a);
}
function r(t, r) {
_i_("d0b:5421a616");
var i, n;
if (!e(t)) return _r_(-1);
if (Array.prototype.findIndex) return _r_(t.findIndex(r));
for (i = 0, n = t.length; n > i; i++) if (r.call(t, t[i], i, t)) return _r_(i);
return _r_(-1);
}
function i(t, r, i) {
_i_("d0b:942fb418");
var n, a;
if (!e(t)) return _r_(t);
if (t.forEach) t.forEach(function(e, t, n) {
_i_("d0b:374b2471"), r.call(i, e, t, n), _r_();
}); else for (n = 0, a = t.length; a > n; ++n) r.call(i, t[n], n, t);
return _r_(t);
}
function n(e, t) {
_i_("d0b:4af2f676");
var i = r(e, function(e) {
return _i_("d0b:8c2a3b8f"), _r_(e === t);
});
return _r_(i > -1 ? !0 :!1);
}
function a(e, t, r) {
for (_i_("d0b:915d6bcb"); 0 > t; ) t += e.length;
for (;0 > r; ) r += e.length;
if (r >= e.length) for (var i = r - e.length + 1; i--; ) e.push(void 0);
return e.splice(r, 0, e.splice(t, 1)[0]), _r_(e);
}
return _r_({
each:i,
find:t,
findIndex:r,
isArray:e,
contains:n,
array_move:a
});
}), B.atlas.define("util-getset", function() {
"use strict";
_i_("d0b:d7a509ec");
function e(e) {
_i_("d0b:dd89f549"), this.set = function(t, r) {
if (_i_("d0b:781e75ba"), t) return e[t] = r, _r_(r);
return _r_(void 0);
}, this.get = function(t) {
return _i_("d0b:e669eacd"), _r_(t ? e[t] :void 0);
}, _r_();
}
return _r_(e);
}), B.atlas.define("util-object", function() {
"use strict";
_i_("d0b:77bc9c9c");
var e = 0;
function t(e) {
_i_("d0b:5fe2d552");
var t = typeof e;
return _r_("function" === t || "object" === t && !!e);
}
function r(e) {
_i_("d0b:e75750bf");
var r, i, n, a, o = [].slice.call(arguments, 0);
if (!t(e)) return _r_(e);
for (n = 1, a = o.length; a > n; ++n) {
r = o[n];
for (i in r) "undefined" != typeof r[i] && (e[i] = r[i]);
}
return _r_(e);
}
function i(t) {
return _i_("d0b:936236a0"), _r_(t ? t + ++e :++e + "");
}
function n(e, t) {
if (_i_("d0b:f8d2efaa"), "object" != typeof e || "object" != typeof t) return _r_(!1);
for (var r in e) if (!(r in t)) return _r_(!0);
for (var r in t) if (e[r] instanceof Object && t[r] instanceof Object) {
if (n(e[r], t[r])) return _r_(!0);
} else if (e[r] !== t[r]) return _r_(!0);
return _r_(!1);
}
function a(e) {
return _i_("d0b:acedc825"), _r_(JSON.parse(JSON.stringify(e)));
}
return _r_({
extend:r,
isObject:t,
uniqueId:i,
simpleDiff:n,
deepClone:a
});
}), B.atlas.define("debug", [ "util-env" ], function(e) {
"use strict";
_i_("d0b:7b8585da");
function t(e, t) {
_i_("d0b:64f3c856");
var r = t.get("boundingBox");
if (!r) return _r_();
B.atlas.require([ "polygons" ], function(e) {
_i_("d0b:9e0cd519"), e.createPolygon.call(t, {
clickable:!1,
fillColor:"#ff0000",
fillOpacity:.1,
strokeColor:"#ff0000",
strokeOpacity:.5,
strokeWeight:1,
paths:[ r.ne, [ r.sw[0], r.ne[1] ], r.sw, [ r.ne[0], r.sw[1] ] ]
}), console.debug("Original Bounding Box", r), _r_();
}), _r_();
}
function r(e) {
_i_("d0b:ec456d07"), e.hideDebugBBox || e.on(e.EVENTS.LOAD, t, e), _r_();
}
function i() {
_i_("d0b:54f398b5");
var t = this;
if (!e.get("debug") || !console) return _r_();
t.logEvents(!0), r(t), _r_();
}
return _r_({
init:i
});
}), B.atlas.define("atlas", [ "jQuery", "pubsub", "geometry.point" ], function(e, t, r, i) {
"use strict";
_i_("d0b:b9bf1de0");
var n = {
options:{
center:[ 0, 0 ],
zoom:8,
isTrackingGoals:!1
},
modules:[ "center", "options", "debug" ]
}, a = B.require("promise"), o = B.require("Atlas/state-utils");
function _(i) {
_i_("d0b:987b4ab3");
var o, s, d, c = i.provider || "provider-google", l = i.modules ? e.merge(i.modules, n.modules) :n.modules, u = this;
u.hasLoaded = !1, u.options = e.extend({}, n.options, i.options || {}), e.extend(u, new t(u)), o = new a(function(e) {
_i_("d0b:45ff95b0"), u.once(u.EVENTS.MARKERS_READY, e), _r_();
}), s = new a(function(e) {
_i_("d0b:2ecdb912"), u.once(u.EVENTS.TILES_LOAD, e), _r_();
}), i.markerProperties && B.atlas.require("atlas-marker-properties").replace(i.markerProperties), a.all([ o, s ]).then(function() {
_i_("d0b:42ead1c5"), u.trigger(u.EVENTS.LOAD), _r_();
}), u.trigger(u.EVENTS.PRE_INIT), u.$domNode = e(i.options.domNode), u.options.isTrackingGoals && l.push("goals"), B.atlas.require(l, function() {
_i_("d0b:32121bc4");
var t, n, a, o = [].slice.call(arguments, 0);
for (t = 0, n = o.length; n > t; ++t) a = o[t], a && a.init ? a.init.call(u) :e.extend(u, a);
u.trigger(u.EVENTS.MODULES_LOADED), u.options.markersURL && u.setMarkersURL(u.options.markersURL), u.trigger(u.EVENTS.API_BEFORE_LOAD), u.set("offset", new r(0, 0)), d = B.atlas.require(c), d.isSupported && !d.isSupported() && (d = B.atlas.require(_.PROVIDER_GOOGLE)), u.readyPromise = d.init(u, u.options).then(function(e) {
_i_("d0b:4551367d"), Array.isArray(i.components) && i.components.forEach(function(e) {
_i_("d0b:892ea9dc"), u.initComponent(e.name, e.options), _r_();
}), setTimeout(function() {
_i_("d0b:3f440eb1"), u.hasLoaded = !0, u.Interface = e, u.trigger(u.EVENTS.READY, u), _r_();
}, 4), _r_();
}), _r_();
}), Array.isArray(i.reducers) && i.reducers.length && (this._store = this.createStore(i.reducers)), _r_();
}
return _.prototype.createStore = function(e) {
_i_("d0b:2b2c897e"), e = e.map(this.initReducer.bind(this));
var t = o.combineReducers(e);
return _r_(o.createStore(t));
}, _.prototype.initReducer = function(e) {
_i_("d0b:f25351d1");
var t = "string" == typeof e.name ? B.require(e.name) :e.name;
return t.initialState && e.initialState && Object.assign(t.initialState, e.initialState), _r_(t);
}, _.prototype.dispatch = function(e) {
return _i_("d0b:9be2db42"), _r_(this._store.dispatch(e));
}, _.prototype.dispatchAction = function() {
return _i_("d0b:d0b913a7"), _r_(o.dispatch.apply(o, [ this ].concat([].slice.call(arguments))));
}, _.prototype.getState = function() {
return _i_("d0b:e46254eb"), _r_(this._store.getState());
}, _.prototype.subscribe = function(e) {
return _i_("d0b:5cac0a6a"), _r_(this._store.subscribe(e));
}, _.prototype.replaceReducer = function(e) {
return _i_("d0b:1bfe37ac"), _r_(this._store.replaceReducer(e));
}, _.prototype.initComponent = function(e, t) {
return _i_("d0b:0fd799ea"), "string" == typeof e && (e = B.require(e)), _r_(t && t.$placeholder ? o.initComponent(this, e, t) :o.initModule(this, e, t));
}, _.prototype.set = function(e, t) {
if (_i_("d0b:848498a4"), e) return this.options[e] = t, _r_(t);
return _r_(i);
}, _.prototype.get = function(e) {
return _i_("d0b:f9b0be37"), _r_(e ? this.options[e] :i);
}, _.prototype.done = function(e) {
_i_("d0b:9e646893"), this.hasLoaded ? e.call(this) :this.on(this.EVENTS.READY, e), _r_();
}, _.PROVIDER_LEAFLET = "provider-leaflet", _.PROVIDER_GOOGLE = "provider-google", _r_(_);
}), B.atlas.define("atlas-places", [ "pubsub", "util-getset", "util-object", "util-array" ], function(e, t, r, i) {
"use strict";
_i_("d0b:134d7c60");
var n = {};
function a(e, t) {
_i_("d0b:f54bb2cb");
var r;
r = document.createElement("div"), r.className = "places-results", e.appendChild(r), t.set("resultsNode", r), r = document.createElement("div"), r.className = "places-attribution", e.appendChild(r), t.set("attributionNode", r), _r_();
}
function o(i) {
_i_("d0b:aa3a2f39");
var a = this, o = i.provider || "provider-google-places", _ = i.modules || [], s = {};
if (r.extend(s, n, i.options), r.extend(a, t.call(a, s)), r.extend(a, e.call(a)), !i.options || !i.options.domNode) return _r_();
a.trigger("pre-init"), a.initialize(o, _, s), _r_();
}
return o.prototype.initialize = function(e, t, n) {
_i_("d0b:d5b5637c");
var o = this, _ = o.get("isInitialized"), s = this.get("domNode");
if (_) return _r_(!1);
a(s, o), B.atlas.require(t, function() {
_i_("d0b:bdd11dbd"), i.each([].slice.call(arguments, 0), function(e) {
_i_("d0b:a7c579f9"), e && e.init ? e.init.call(o) :e && r.extend(o, e), _r_();
}), B.atlas.require(e).init(o, n).then(function(e) {
_i_("d0b:aef52c92"), setTimeout(function() {
_i_("d0b:522d4ea4"), o.set("hasLoaded", !0), o.Interface = e, o.trigger("ready", o), _r_();
}, 4), _r_();
}), _r_();
}), o.set("isInitialized", !0), _r_();
}, o.prototype.done = function(e) {
_i_("d0b:991fc04a"), this.get("hasLoaded") ? e.call(this) :this.on("ready", e), _r_();
}, _r_(o);
}), B.atlas.define("pubsub", [ "jQuery" ], function(e) {
"use strict";
_i_("d0b:d3831791");
var t;
t = {
API_BEFORE_LOAD:"api-before-load",
API_LOADED:"api-loaded",
BOUNDS_CHANGE:"bounds-change",
BROWSER_USE_GEOLOCATION_ACCEPTED:"browser-use-geolocation-accepted",
CLOSE:"close",
DRAG:"drag",
DRAG_END:"drag-end",
DRAG_START:"drag-start",
FIXED_IW_AUTO_OPEN:"fixed-iw-auto-open",
IDLE:"idle",
IW_OPEN:"iw-open",
IW_CLOSE:"iw-close",
IW_BEFORE_GET:"iw-get-before",
IW_GET_SUCCESS:"iw-get-success",
IW_GET_FAIL:"iw-get-fail",
IW_RENDERED:"iw-rendered",
LOAD:"load",
CLICK:"click",
MARKER_CLICK:"marker-click",
MARKER_HOVER:"marker-hover",
MARKER_OUT:"marker-out",
MARKERS_GET_BEFORE:"markers-get-before",
MARKERS_GET_SUCCESS:"markers-get-success",
MARKERS_GET_FAIL:"markers-get-fail",
MARKERS_GET_NO_DATA:"markers-get-no-data",
MARKERS_RENDERED:"markers-rendered",
MARKERS_READY:"markers-ready",
MODULES_LOADED:"modules-loaded",
OFFSET_CHANGE:"offset-change",
OPEN:"open",
POLYGON_CLICK:"polygon-click",
PRE_INIT:"pre-init",
READY:"ready",
RESIZE:"resize",
TILES_LOAD:"tiles-loaded",
ZOOM:"zoom",
GOOGLE_MAPTYPE_CHANGE:"google-map-type-change"
};
function r(r) {
_i_("d0b:6ec806e7");
var i = !1, n = {}, a = {};
function o(e, t) {
_i_("d0b:0eab9a8b"), i && console.log("Atlas event: " + e, t), _r_();
}
function _(t, r) {
_i_("d0b:13aa0503");
var i = this, _ = [];
r = r || null, o(t, r), n.hasOwnProperty(t) && (e.each(n[t], function(e, n) {
_i_("d0b:60fe38e7"), n.handler.call(i, r, n.args, t), n.once && _.push([ t, n.handler ]), _r_();
}), e.each(_, function(e, t) {
_i_("d0b:3b701100"), c(t[0], t[1]), _r_();
})), a.hasOwnProperty(t) && e.each(a[t], function(e, n) {
_i_("d0b:4a8b391c"), n.handler.call(i, r, n.args, t), _r_();
}), _r_();
}
function s(t, r, i, o) {
_i_("d0b:268d56dc"), t = t && "string" == typeof t ? [ t ] :t, e.each(t, function(e, t) {
_i_("d0b:059b7c85"), o ? (a[t] = a[t] || [], a[t].push({
handler:r,
args:i || null
})) :(n[t] = n[t] || [], n[t].push({
handler:r,
args:i || null
})), _r_();
}), _r_();
}
function d(t, r, i) {
_i_("d0b:211b7e20"), t = t && "string" == typeof t ? [ t ] :t, e.each(t, function(e, t) {
_i_("d0b:c37225eb"), n[t] = n[t] || [], n[t].push({
handler:r,
args:i || null,
once:!0
}), _r_();
}), _r_();
}
function c(t, r) {
_i_("d0b:35d22121"), !n.hasOwnProperty(t) || r && r !== !0 ? n.hasOwnProperty(t) && (n[t] = e.grep(n[t], function(e) {
return _i_("d0b:09746f68"), _r_(e.handler !== r);
})) :n[t] = [], _r_();
}
function l() {
_i_("d0b:3370e245"), n = {}, _r_();
}
function u(e) {
return _i_("d0b:aa0b5e28"), _r_(n[e] || []);
}
function f() {
_i_("d0b:26581d44");
var t = [];
return e.each(n, function(e) {
_i_("d0b:be504fac"), t.push(e), _r_();
}), _r_(t);
}
function b(e) {
return _i_("d0b:b2bbc88c"), i = e, _r_(i);
}
return _r_({
EVENTS:t,
trigger:_,
on:s,
once:d,
off:c,
destroyAllBindings:l,
getSubscribers:u,
getEvents:f,
logEvents:b
});
}
return _r_(r);
}), B.atlas.require("jQuery").extend(B.atlas, function(e, t) {
"use strict";
_i_("d0b:9fb585eb");
var r = {};
function i(e) {
_i_("d0b:23328f9a");
var r = t.atlas.EXPERIMENTS, i = r && r.templates ? r.templates :[];
return i.some(function(r) {
if (_i_("d0b:df7e1150"), r.name === e && n(r.name) !== !1) return r.touched || (t.et.track(r.name), r.touched = !0), _r_(!0);
return _r_(!1);
}), _r_(n(e));
}
function i(e) {
return _i_("d0b:b5df74fe"), _r_(n(e));
}
function n(e) {
_i_("d0b:e3f94bbb");
var i = 0;
if (!t.atlas.EXPERIMENTS) return _r_(i);
if (void 0 !== r[e]) return _r_(r[e]);
return t.atlas.EXPERIMENTS.forEach(function(r) {
_i_("d0b:bdd03f51"), r.name === e && r.cond && (i = void 0 !== r._FORCE_VARIANT_ && "" !== r._FORCE_VARIANT_ ? parseInt(r._FORCE_VARIANT_, 10) || 0 :t.et.track(e), "ebccCcCcCDSScYMeCFC" === e && r.__EXTRA_COND__ && (i = 1)), _r_();
}), r[e] = i, _r_(i);
}
return _r_({
getVariant:n,
trackInTemplate:i
});
}(B.require("jquery"), B)), B.atlas.define("geo.bounds", [ "geo.latLng" ], function(e) {
"use strict";
_i_("d0b:88d4bc88");
function t(t) {
return _i_("d0b:6f4609df"), _r_(t instanceof e ? t :new e(t[0] || 0, t[1] || 0));
}
function r(e) {
_i_("d0b:2a8659ba"), e = t(e);
var r = e.lat, i = e.lng;
if (r > 90) switch (r %= 360, parseInt(r / 90)) {
case 0:
break;

case 1:
r = 90 * parseInt((r + 90) / 90) - r;
break;

case 2:
r = 90 * parseInt(r / 90) - r;
break;

case 3:
r -= 90 * parseInt((r + 90) / 90);
} else if (-90 > r) switch (r %= 360, parseInt(r / 90)) {
case 0:
break;

case -1:
r = 90 * parseInt((r - 90) / 90) - r;
break;

case -2:
r = 90 * parseInt(r / 90) - r;
break;

case -3:
r -= 90 * parseInt((r - 90) / 90);
}
return i > 180 ? i = (i + 180) % 360 - 180 :-180 > i && (i = (i - 180) % 360 + 180), e.lat = r, e.lng = i, _r_(e);
}
function i(e, t) {
_i_("d0b:e32496e1"), e && t && (this.extend(e), this.extend(t)), _r_();
}
return i.prototype = {
extend:function(e) {
_i_("d0b:6e7641ab");
var r = t(e), i = this.sw, n = this.ne;
return i ? (this.sw.set(Math.min(i.lat, r.lat), Math.min(i.lng, r.lng)), this.ne.set(Math.max(n.lat, r.lat), Math.max(n.lng, r.lng))) :(this.sw = r.clone(), this.ne = r.clone()), _r_(this);
},
reset:function() {
_i_("d0b:357c1b79"), this.ne = this.sw = null, _r_();
},
getNorthEast:function() {
return _i_("d0b:5a56ff5f"), _r_(this.ne || new e(0, 0));
},
getSouthWest:function() {
return _i_("d0b:a2677157"), _r_(this.sw || new e(0, 0));
},
setNorthEast:function(e) {
_i_("d0b:5acc46f3"), this.ne = t(e), _r_();
},
setSouthWest:function(e) {
_i_("d0b:1ba6ab44"), this.sw = t(e), _r_();
},
getCenter:function() {
return _i_("d0b:13a63ef4"), _r_(new e((this.sw.lat + this.ne.lat) / 2, (this.sw.lng + this.ne.lng) / 2));
},
isEmpty:function() {
return _i_("d0b:bcf8b6c9"), _r_(!this.sw && !this.ne || this.sw.toString() === this.ne.toString());
},
equals:function(e) {
return _i_("d0b:a8390a32"), _r_(e instanceof i ? this.toString() === e.toString() :!1);
},
intersects:function(e) {
_i_("d0b:8037764e");
var t = this.sw, r = this.ne, i = e.sw, n = e.ne, a = n.lat >= t.lat && i.lat <= r.lat, o = n.lng >= t.lng && i.lng <= r.lng;
return _r_(a && o);
},
union:function(e) {
return _i_("d0b:b0ea6d5d"), this.extend(e.getSouthWest()), this.extend(e.getNorthEast()), _r_(this);
},
contains:function(e) {
_i_("d0b:175bd1bf");
var r, n, a, o;
return e instanceof i ? (r = e.getNorthEast(), n = e.getSouthWest(), a = n.lat >= this.sw.lat && n.lng >= this.sw.lng && r.lat <= this.ne.lat && r.lng <= this.ne.lng) :(n = r = t(e), o = Math.abs(this.ne.lng - this.sw.lng), a = n.lat >= this.sw.lat && n.lat <= this.ne.lat && (n.lng >= this.sw.lng && n.lng <= this.sw.lng + o || n.lng <= this.sw.lng && n.lng >= this.ne.lng - o)), _r_(a);
},
toMOMString:function() {
return _i_("d0b:8102eb2e"), r(this.sw), r(this.ne), _r_([ this.sw.lng, this.sw.lat, this.ne.lng, this.ne.lat ].join(","));
},
toString:function() {
return _i_("d0b:14beb9cc"), r(this.sw), r(this.ne), _r_([ "SW:", this.sw.toString(), ",", "NE:", this.ne.toString() ].join(" "));
}
}, _r_(i);
}), B.atlas.define("geo.latLng", function() {
"use strict";
_i_("d0b:a1e3c9be");
function e(e, t) {
_i_("d0b:10865764");
var r;
"string" == typeof e && e.indexOf(",") > 0 ? (r = e.split(","), this.lat = +r[0], this.lng = +r[1]) :"object" == typeof google && google.maps && e instanceof google.maps.LatLng ? (this.lat = +e.lat(), this.lng = +e.lng()) :"[object Array]" === Object.prototype.toString.call(e) ? (this.lat = +e[0], this.lng = +e[1]) :(this.lat = +e || 0, this.lng = +t || 0), _r_();
}
return e.prototype = {
set:function(e, t) {
return _i_("d0b:aeb505f4"), this.lat = +e, this.lng = +t, _r_(this);
},
clone:function() {
return _i_("d0b:d3064f26"), _r_(new e(this.lat, this.lng));
},
toString:function() {
return _i_("d0b:ff384952"), _r_([ "[", this.lat, ",", this.lng, "]" ].join(""));
}
}, _r_(e);
}), B.atlas.define("geo.projection", [ "geometry.point", "geo.latLng" ], function(e, t) {
"use strict";
_i_("d0b:e1fc6a32");
var r = 6378137, i = .5 / (Math.PI * r), n = Math.PI / 180, a = 180 / Math.PI;
function o(e) {
return _i_("d0b:41917663"), _r_(e * n);
}
function _(e) {
return _i_("d0b:cedbb532"), _r_(e * a);
}
function s(e, t) {
_i_("d0b:6f3f4729");
var i = e, n = t, a = o(n.lat - i.lat), _ = o(n.lng - i.lng), s = Math.sin(a / 2) * Math.sin(a / 2) + Math.cos(o(i.lat)) * Math.cos(o(n.lat)) * Math.sin(_ / 2) * Math.sin(_ / 2);
return _r_(2 * Math.atan2(Math.sqrt(s), Math.sqrt(1 - s)) * r);
}
function d(e) {
return _i_("d0b:4828700b"), _r_(256 * Math.pow(2, e));
}
function c(t) {
return _i_("d0b:543532cf"), _r_(new e(r * t.lng * n, r * Math.log(Math.tan(Math.PI / 4 + t.lat * n / 2))));
}
function l(e) {
return _i_("d0b:79fa93ee"), _r_(new t((2 * Math.atan(Math.exp(e.y / r)) - Math.PI / 2) * a, e.x * a / r));
}
function u(t, r) {
_i_("d0b:121279bd");
var n = d(r) || 1, a = c(t);
return _r_(new e(n * i * a.x, n * -i * a.y));
}
function f(t, r) {
_i_("d0b:58429877");
var n = d(r) || 1, a = new e(t.x / n / i, t.y / n / -i);
return _r_(l(a));
}
return _r_({
toRadians:o,
toDegrees:_,
getScale:d,
getDistance:s,
latLngToPoint:u,
pointToLatLng:f
});
}), B.atlas.define("geo.view", [ "geo.projection", "geo.bounds", "geo.latLng", "geometry.point" ], function(e, t, r, i) {
"use strict";
_i_("d0b:6fe356ef");
var n = 1, a = 18;
function o(e, r, i) {
_i_("d0b:2f5f92e6"), this.zoom = !1, this.width = +e, this.height = +r, this.bounds = i instanceof t ? i :new t(), _r_();
}
return o.prototype = {
extend:function(e) {
return _i_("d0b:57a45dcb"), this.bounds.extend(e), this.zoom = !1, _r_(this);
},
extrapolate:function(t, n) {
_i_("d0b:eb69f8a3");
var a = new r(t), o = e.latLngToPoint(a, n), _ = new i(this.width / 2, this.height / 2), s = new i(o.x + _.x, o.y - _.y), d = new i(o.x - _.x, o.y + _.y);
return this.setNorthEast(e.pointToLatLng(s, n)), this.setSouthWest(e.pointToLatLng(d, n)), _r_(this);
},
getCenter:function(t) {
_i_("d0b:f07da39b");
var r, i = this.bounds.getCenter(), n = this.getZoom();
return t && (r = e.latLngToPoint(i, n).subtract(t), i = e.pointToLatLng(r, n)), _r_(i);
},
getNorthWest:function() {
_i_("d0b:de247151");
var t = this.bounds.getCenter(), r = this.getZoom(), n = new i(this.width / 2, this.height / 2), a = e.latLngToPoint(t, r), o = a.subtract(n);
return _r_(e.pointToLatLng(o, r));
},
getSouthEast:function() {
_i_("d0b:e225f117");
var t = this.bounds.getCenter(), r = this.getZoom(), n = new i(this.width / 2, this.height / 2), a = e.latLngToPoint(t, r), o = a.add(n);
return _r_(e.pointToLatLng(o, r));
},
setNorthEast:function(e) {
_i_("d0b:e28b4ec5"), this.bounds.setNorthEast(e), _r_();
},
setSouthWest:function(e) {
_i_("d0b:f72d463a"), this.bounds.setSouthWest(e), _r_();
},
getZoom:function(t, i) {
_i_("d0b:71dcbcfd");
var o, _, s = t || n, d = !0, c = this.bounds.getNorthEast(), l = this.bounds.getSouthWest(), u = new r(c.lat, l.lng), f = new r(l.lat, c.lng);
if (!this.zoom) {
for (i = i || a; d && s++ < i; ) o = e.latLngToPoint(u, s), _ = e.latLngToPoint(f, s).subtract(o), d = parseInt(_.x, 10) <= this.width && parseInt(_.y, 10) <= this.height;
this.zoom = Math.max(t || n, s - 1);
}
return _r_(this.zoom);
},
getZoomBySmarterFit:function(t, i) {
_i_("d0b:8ef86d0e");
var o, _, s = t || n, d = 0, c = !1, l = n, u = this.bounds.getNorthEast(), f = this.bounds.getSouthWest(), b = new r(u.lat, f.lng), h = new r(f.lat, u.lng);
for (i = i || a; !c && s++ < i; ) {
o = e.latLngToPoint(b, s), _ = e.latLngToPoint(h, s).subtract(o);
var p = parseInt(_.x, 10), g = parseInt(_.y, 10), m = Math.min(p, this.width) * Math.min(g, this.height), v = this.width * this.height + p * g - m, y = m / v;
y >= d ? (l = s, d = y) :c = !0;
}
return this.zoom = Math.max(t || n, l), _r_(this.zoom);
},
latLngToPixel:function(t) {
_i_("d0b:eed77d76");
var r = this.getZoom(), i = e.latLngToPoint(this.getNorthWest(), r);
return _r_(e.latLngToPoint(t, r).subtract(i));
},
pixelToLatLng:function(t) {
_i_("d0b:34aee0dd");
var r = this.getZoom(), i = e.latLngToPoint(this.getNorthWest(), r);
return _r_(e.pointToLatLng(t.add(i), r));
},
getDistance:function(t, r) {
return _i_("d0b:6e0e0591"), _r_(e.getDistance(t, r));
},
toString:function() {
return _i_("d0b:9546b78d"), _r_(this.bounds.toString());
}
}, _r_(o);
}), B.atlas.define("geometry.point", function() {
"use strict";
_i_("d0b:68cfe6b9");
function e(e, t) {
_i_("d0b:9c64cf90"), this.x = +e, this.y = +t, _r_();
}
return e.prototype = {
set:function(e, t) {
return _i_("d0b:5acd7c67"), this.x = +e, this.y = +t, _r_(this);
},
clone:function() {
return _i_("d0b:cb955930"), _r_(new e(this.x, this.y));
},
add:function(t) {
return _i_("d0b:910ab1ff"), _r_(new e(this.x + t.x, this.y + t.y));
},
subtract:function(t) {
return _i_("d0b:422c6d88"), _r_(new e(this.x - t.x, this.y - t.y));
},
toString:function() {
return _i_("d0b:5b8614ed"), _r_([ "[", this.x, ",", this.y, "]" ].join(""));
}
}, _r_(e);
}), B.atlas.define("icons-default", [ "util-object" ], function(e) {
"use strict";
_i_("d0b:f6205040");
var t, r = "//q.bstatic.com/static/img/map_sprites_omnibus_mk3/e3b6aedd86458d97669b69c59cd62d96972b68f3.png", i = {
url:r,
w:18,
h:27,
x:33,
y:33,
z:110
};
function n(t) {
return _i_("d0b:bedcade9"), _r_(e.extend({}, i, t));
}
t = {
hotel:n({}),
hotel_soldout:n({}),
hotel_matching:n({
x:0,
z:110
}),
hotel_not_matching:n({
x:17,
z:100
}),
genius:n({
x:136,
z:120
}),
city:n({
x:118,
z:60
}),
landmark:n({
x:51,
z:80
}),
airport:n({
x:102,
z:90
}),
transport:n({
x:68,
z:70
}),
ski_lift:n({
x:85,
z:70
}),
hotel_current:n({
w:22,
h:36,
x:198,
y:60,
z:2e3
}),
hotel_soldout_current:n({
w:22,
h:36,
x:198,
y:60,
z:2e3
}),
genius_current:n({
w:22,
h:36,
x:176,
y:60,
z:130
}),
city_current:n({
w:22,
h:36,
x:154,
y:60,
z:65
}),
airport_current:n({
w:22,
h:36,
x:132,
y:60,
z:95
}),
landmark_current:n({
w:22,
h:36,
x:66,
y:60,
z:85
}),
transport_current:n({
w:22,
h:36,
x:88,
y:60,
z:75
}),
ski_lift_current:n({
w:22,
h:36,
x:110,
y:60,
z:75
}),
"default":n({})
};
function a(e) {
return _i_("d0b:029a9033"), _r_(e && t.hasOwnProperty(e) ? t[e] :t["default"]);
}
function o(t) {
_i_("d0b:ea96af07");
var r = {}, i = a(t);
switch (!0) {
case "genius" === t:
case "city" === t:
case "landmark" === t:
case "airport" === t:
case "transport" === t:
case "ski_lift" === t:
case "genius_current" === t:
case "city_current" === t:
case "airport_current" === t:
case "landmark_current" === t:
case "transport_current" === t:
case "ski_lift_current" === t:
r = i;
break;

case t && t.indexOf("_current") > -1:
e.extend(r, i, {
x:198,
y:60,
z:2e3
});
break;

default:
e.extend(r, i, {
x:153,
y:33,
z:2e3
});
}
return _r_(r);
}
return _r_({
ICONS:t,
getIcon:a,
getHover:o
});
}), B.atlas.define("autocomplete", function() {
"use strict";
_i_("d0b:5bd8018d");
function e(e, t, r) {
_i_("d0b:11d500dc"), this.Interface.autocomplete(e, t, r), _r_();
}
return _r_({
autocomplete:e
});
}), B.atlas.define("bounds", [ "geo.view", "geo.bounds" ], function(e, t) {
"use strict";
_i_("d0b:32a8c93c");
function r() {
return _i_("d0b:00448661"), _r_(this.Interface.getBoundingBox());
}
function i() {
_i_("d0b:4551ef88");
var e = new t(), r = this.getBoundingBox();
if (!r) throw "Bounds is undefined, wait until 'bounds-changed' event is fired before calling getBounds()";
return e.setNorthEast(r.NE), e.setSouthWest(r.SW), _r_(e);
}
function n(r) {
_i_("d0b:ebe61fbf");
var i = this.$domNode, n = r instanceof t ? r :new t(r.sw, r.ne), a = this.get("offset"), o = i.width() - Math.abs(a.x), _ = i.height() - Math.abs(a.y), s = new e(o, _, n);
return _r_({
center:s.getCenter({
x:a.x / 2,
y:a.y / 2
}),
zoom:s.getZoom()
});
}
function a() {
_i_("d0b:4ceb14da");
var r, i = this.$domNode, n = i.width(), a = i.height(), o = this.Interface.getBoundingBox(), _ = new t();
return o ? (_.setNorthEast(o.NE), _.setSouthWest(o.SW)) :(r = new e(n, a), r.extrapolate(this.getCenter(), this.getZoom()), _.setNorthEast([ r.getSouthEast().lat, r.getNorthWest().lng ]), _.setSouthWest([ r.getNorthWest().lat, r.getSouthEast().lng ])), _r_(new e(n, a, _));
}
function o(r) {
_i_("d0b:3f46ab05");
var i, n = this.$domNode, a = this.get("offset"), o = n.width() - Math.abs(a.x), _ = n.height() - Math.abs(a.y);
if (!r instanceof t) return _r_();
i = new e(o, _, r), this.Interface.setCenter(i.getCenter({
x:a.x / 2,
y:a.y / 2
})), this.Interface.setZoom(i.getZoom()), _r_();
}
function _(e) {
_i_("d0b:9ecc2a67");
for (var r, i = new t(), n = e.length; n--; ) i.extend(e[n]);
r = this.defineBounds(i), this.Interface.setCenter(r.center), this.Interface.setZoom(r.zoom), _r_();
}
return _r_({
getBounds:i,
getBoundingBox:r,
setBoundingBox:_,
setBounds:o,
defineBounds:n,
getViewFromMap:a
});
}), B.atlas.define("interface-bounds", function() {
"use strict";
return _i_("d0b:8520e710"), _r_({
Bounds:function() {
return _i_("d0b:19106b66"), _r_(new this.Interface.Bounds());
},
fitBounds:function(e) {
return _i_("d0b:e99564c4"), _r_(this.Interface.fitBounds(e));
},
fitBoundsWithOffset:function(e, t) {
_i_("d0b:b4ab3bfb");
var r = this.Interface.map;
if (r.getProjection()) {
this.fitBounds(e.bounds);
var i = r.getProjection().fromLatLngToPoint(e.bounds.getSouthWest()), n = new google.maps.Point(t.x / Math.pow(2, r.getZoom()) || 0, t.y / Math.pow(2, r.getZoom()) || 0), a = r.getProjection().fromPointToLatLng(new google.maps.Point(i.x - n.x, i.y + n.y));
e.bounds.extend(a), this.fitBounds(e.bounds);
}
_r_();
}
});
}), B.atlas.define("center", function() {
"use strict";
_i_("d0b:0f27e3da");
function e() {
return _i_("d0b:0ddf4252"), _r_(this.Interface.getCenter(this.get("offset")));
}
function t(e, t) {
return _i_("d0b:6ddb68f5"), _r_(this.Interface.panBy(e, t));
}
function r() {
_i_("d0b:abbcd075"), this.Interface && "function" == typeof this.Interface.resize && this.Interface.resize(), _r_();
}
function i(e) {
_i_("d0b:63093a05"), this.Interface.setCenter(e, this.get("offset")), _r_();
}
function n(e) {
_i_("d0b:fde593f9"), this.Interface.panTo(e, this.get("offset")), _r_();
}
return _r_({
getCenter:e,
panBy:t,
panTo:n,
resize:r,
setCenter:i
});
}), B.atlas.define("circles", [ "jQuery" ], function(e) {
"use strict";
_i_("d0b:62733e17");
var t = {
paths:[],
clickable:!0,
fillColor:"#0896ff",
fillOpacity:.1,
strokeColor:"#003580",
strokeOpacity:.7,
strokeWeight:3
};
function r(r) {
_i_("d0b:f9797c96");
var i, n = t, a = r.style && r.style.hover && r.style["default"];
return a && (n = e.extend({}, n, r.style["default"])), i = new this.Interface.Circle(e.extend({}, n, r), this.Interface), i.on("mouseover", function(e) {
_i_("d0b:6f67dc6f"), "function" == typeof r.mouseover && r.mouseover.call(this, e), a && i.setOptions(r.style.hover), _r_();
}).on("mouseout", function(e) {
_i_("d0b:450ac174"), "function" == typeof r.mouseout && r.mouseout.call(this, e), a && i.setOptions(r.style["default"]), _r_();
}).on("click", function(e) {
_i_("d0b:881cf901"), "function" == typeof r.click && r.click.call(this, e), _r_();
}), _r_(i);
}
return _r_({
createCircle:r
});
}), B.atlas.define("goals", [ "jQuery", "util-env" ], function(e, t) {
"use strict";
_i_("d0b:c73bff3b");
var r, i, n = "hotel" === t.get("action"), a = "searchresults" === t.get("action"), o = {}, _ = {
atlas_hp_open:!0,
atlas_hp_close:!0,
atlas_hp_bounce:!0,
atlas_hp_hover_bounce:!0,
atlas_sr_open:!0,
atlas_sr_close:!0,
atlas_sr_bounce:!0,
atlas_sr_hover_bounce:!0,
atlas_sr_no_results_in_view:!0
}, s = e.extend({}, _, {
atlas_hp_hover_ufi:!0,
atlas_hp_hover_property:!0,
atlas_hp_hover_airport:!0,
atlas_sr_hover_ufi:!0,
atlas_sr_hover_property:!0,
atlas_sr_hover_airport:!0
});
function d(e, t) {
if (_i_("d0b:a7e199f2"), !t || !i) return _r_(!1);
if (e(t, i)) return i = t, _r_(!0);
_r_();
}
var c = d.bind(null, function(e, t) {
return _i_("d0b:3cc13390"), _r_(e > t);
}), l = d.bind(null, function(e, t) {
return _i_("d0b:55902058"), _r_(t > e);
});
r = [ {
evt:"load",
name:"atlas_hp_open",
condition:n
}, {
evt:"load",
name:"atlas_sr_open",
condition:a
}, {
evt:"close",
name:"atlas_hp_close",
condition:n
}, {
evt:"close",
name:"atlas_sr_close",
condition:a
}, {
evt:"marker-click",
name:"atlas_hp_click_property",
condition:n,
filter:function(e) {
return _i_("d0b:70baa2ea"), _r_(/hotel/.test(e.type));
}
}, {
evt:"marker-click",
name:"atlas_sr_click_property",
condition:a,
filter:function(e) {
return _i_("d0b:70baa2ea1"), _r_(/hotel/.test(e.type));
}
}, {
evt:"marker-click",
name:"atlas_hp_click_ufi",
condition:n,
filter:function(e) {
return _i_("d0b:bb10624e"), _r_(/city/.test(e.type));
}
}, {
evt:"marker-click",
name:"atlas_sr_click_ufi",
condition:a,
filter:function(e) {
return _i_("d0b:20e977e5"), _r_(/city/.test(e.type) && !/vpm/.test(e.type));
}
}, {
evt:"marker-click",
name:"atlas_sr_click_airport",
condition:a,
filter:function(e) {
return _i_("d0b:9e671826"), _r_(/airport/.test(e.type));
}
}, {
evt:"marker-hover-triggered",
name:"atlas_hp_hover_property",
condition:n,
filter:function(e) {
return _i_("d0b:70baa2ea2"), _r_(/hotel/.test(e.type));
}
}, {
evt:"marker-hover-triggered",
name:"atlas_sr_hover_property",
condition:a,
filter:function(e) {
return _i_("d0b:70baa2ea3"), _r_(/hotel/.test(e.type));
}
}, {
evt:"marker-hover-triggered",
name:"atlas_hp_hover_ufi",
condition:n,
filter:function(e) {
return _i_("d0b:bb10624e1"), _r_(/city/.test(e.type));
}
}, {
evt:"marker-hover-triggered",
name:"atlas_sr_hover_ufi",
condition:a,
filter:function(e) {
return _i_("d0b:bb10624e2"), _r_(/city/.test(e.type));
}
}, {
evt:"marker-hover-triggered",
name:"atlas_sr_hover_airport",
condition:a,
filter:function(e) {
return _i_("d0b:9e6718261"), _r_(/airport/.test(e.type));
}
}, {
evt:"filters-applied",
name:"atlas_sr_map_filter",
condition:a
}, {
evt:"zoom",
name:"atlas_sr_zoom_in",
condition:a,
filter:c
}, {
evt:"zoom",
name:"atlas_sr_zoom_out",
condition:a,
filter:l
}, {
evt:"zoom",
name:"atlas_hp_zoom_in",
condition:n,
filter:c
}, {
evt:"zoom",
name:"atlas_hp_zoom_out",
condition:n,
filter:l
}, {
evt:"drag-start",
name:"atlas_sr_panned",
condition:a
}, {
evt:"drag-start",
name:"atlas_hp_panned",
condition:n
}, {
evt:"close",
name:"atlas_sr_bounce",
condition:a,
filter:function() {
return _i_("d0b:8fcd3794"), _r_(f(_));
}
}, {
evt:"close",
name:"atlas_hp_bounce",
condition:n,
filter:function() {
return _i_("d0b:8fcd37941"), _r_(f(_));
}
}, {
evt:"close",
name:"atlas_sr_hover_bounce",
condition:a,
filter:function() {
return _i_("d0b:a0cef44c"), _r_(f(s));
}
}, {
evt:"close",
name:"atlas_hp_hover_bounce",
condition:n,
filter:function() {
return _i_("d0b:a0cef44c1"), _r_(f(s));
}
}, {
evt:"markers-ready",
name:"atlas_sr_no_results_in_view",
condition:a,
filter:function() {
if (_i_("d0b:a145190a"), !this.getHotelMarkersInBounds) return _r_(!1);
return _r_(0 === this.getHotelMarkersInBounds().length);
}
}, {
evt:"marker-click",
name:"atlas_hp_current_property_click",
condition:n,
filter:function(e) {
return _i_("d0b:decc1459"), _r_("hotel_current" === e.type);
}
}, {
evt:"markers-ready",
name:"atlas_hp_current_property_lost",
condition:n,
filter:function() {
_i_("d0b:af134fb7");
var e = this.getMarker(B.env.b_hotel_id);
if (!e) return _r_(!1);
var t = this.getBounds(), r = t.contains([ e.b_latitude, e.b_longitude ]);
return _r_(!r);
}
}, {
evt:"marker-click",
name:"atlas_sr_click_property_level_1",
condition:a,
filter:u.bind(null, "atlas_sr_click_property", 5)
}, {
evt:"marker-click",
name:"atlas_sr_click_property_level_2",
condition:a,
filter:u.bind(null, "atlas_sr_click_property", 10)
}, {
evt:"marker-click",
name:"atlas_sr_click_property_level_3",
condition:a,
filter:u.bind(null, "atlas_sr_click_property", 15)
}, {
evt:"marker-click",
name:"atlas_hp_click_property_level_1",
condition:n,
filter:u.bind(null, "atlas_hp_click_property", 5)
}, {
evt:"marker-click",
name:"atlas_hp_click_property_level_2",
condition:n,
filter:u.bind(null, "atlas_hp_click_property", 10)
}, {
evt:"marker-click",
name:"atlas_hp_click_property_level_3",
condition:n,
filter:u.bind(null, "atlas_hp_click_property", 15)
}, {
evt:"drag-start",
name:"atlas_sr_panned_level_1",
condition:a,
filter:u.bind(null, "atlas_sr_panned", 15)
}, {
evt:"drag-start",
name:"atlas_sr_panned_level_2",
condition:a,
filter:u.bind(null, "atlas_sr_panned", 30)
}, {
evt:"drag-start",
name:"atlas_hp_panned_level_1",
condition:n,
filter:u.bind(null, "atlas_hp_panned", 15)
}, {
evt:"drag-start",
name:"atlas_hp_panned_level_2",
condition:n,
filter:u.bind(null, "atlas_hp_panned", 30)
}, {
evt:"zoom",
name:"atlas_sr_zoom_in_level_1",
condition:a,
filter:u.bind(null, "atlas_sr_zoom_in", 5)
}, {
evt:"zoom",
name:"atlas_sr_zoom_in_level_2",
condition:a,
filter:u.bind(null, "atlas_sr_zoom_in", 10)
}, {
evt:"zoom",
name:"atlas_hp_zoom_in_level_1",
condition:n,
filter:u.bind(null, "atlas_hp_zoom_in", 5)
}, {
evt:"zoom",
name:"atlas_hp_zoom_in_level_2",
condition:n,
filter:u.bind(null, "atlas_hp_zoom_in", 10)
}, {
evt:"zoom",
name:"atlas_sr_zoom_out_level_1",
condition:a,
filter:u.bind(null, "atlas_sr_zoom_out", 5)
}, {
evt:"zoom",
name:"atlas_sr_zoom_out_level_2",
condition:a,
filter:u.bind(null, "atlas_sr_zoom_out", 10)
}, {
evt:"zoom",
name:"atlas_hp_zoom_out_level_1",
condition:n,
filter:u.bind(null, "atlas_hp_zoom_out", 5)
}, {
evt:"zoom",
name:"atlas_hp_zoom_out_level_2",
condition:n,
filter:u.bind(null, "atlas_hp_zoom_out", 10)
} ];
function u(e, t) {
return _i_("d0b:2ee49858"), _r_(o[e] >= t);
}
function f(e) {
return _i_("d0b:208330fb"), _r_(Object.keys(o).every(function(t) {
return _i_("d0b:46be72e5"), _r_(e[t] === !0);
}));
}
function b(e, t) {
if (_i_("d0b:fa74d719"), t.filter && !t.filter.apply(this, [].slice.call(arguments, 0))) return _r_();
if (!B.et || !B.et.goal) return _r_();
B.et.goal(t.name), o[t.name] = (o[t.name] || 0) + 1, _r_();
}
return _r_({
init:function() {
_i_("d0b:99464d44");
var t = this;
if ("default" !== this.get("id")) return _r_();
e.each(r, function(e, r) {
_i_("d0b:b3786101"), r.condition && t.on(r.evt, function() {
_i_("d0b:495a67c5"), b.apply(t, [].slice.call(arguments, 0)), _r_();
}, r, !0), _r_();
}), t.on("load", function() {
_i_("d0b:4f7178f6"), "function" == typeof t.getZoom && (i = t.getZoom()), _r_();
}), _r_();
}
});
}), $(function() {
"use strict";
if (_i_("d0b:a9f5cc8c"), !B.atlas) return _r_();
B.atlas.define("iw-ajax", [ "jQuery", "util-env", "util-array" ], function(e, t, r) {
_i_("d0b:36689f65");
var i = [], n = {};
function a(e, t) {
_i_("d0b:1e77a71c");
var n, a = r.findIndex(i, function(t) {
return _i_("d0b:d8bbfa16"), _r_(t[0] === e);
}), o = i[a];
if (a > -1) {
n = o[2], o[1] != t && (n.abort(), i.splice(a), e.trigger("iw-get-abort", e));
var _ = o;
return _r_(_);
}
_r_();
}
function o(e) {
_i_("d0b:b303c92d");
var t = r.findIndex(i, function(t) {
return _i_("d0b:d8bbfa161"), _r_(t[0] === e);
}), n = i[t];
"object" == typeof n && (n[3].length = 0), _r_();
}
function _(e) {
_i_("d0b:575dcc42");
var r = this.get("markerDetailsURL");
return r || (r = t.get("markerDetailsURL"), this.set("markerDetailsURL", r)), r += ";hotel_id=" + e, this.get("map-track") && (r += ";mt=" + this.get("map-track")), _r_(r);
}
function s(n, s, d) {
_i_("d0b:cb9460a4");
var u = this.getMarker(n);
if ("mdot" === B.env.b_site_type && "searchresults" === t.get("action")) return s(u), _r_();
if (!u) return _r_();
var f, b = _.call(this, u.b_id), h = this, p = c(n), g = a(h, n);
if (g = g || [], g[3] = g[3] && g[3].length > 0 && g[1] == n ? g[3] :[], g[3].push(s), !d && p) return r.each(g[3], function(e) {
_i_("d0b:41d767ea"), "function" == typeof e && e.apply(h, [ p ]), _r_();
}), o(h), _r_(p);
if (g[3].length > 1) return _r_();
return h.trigger("iw-get-before", {
marker:u,
map:h
}), f = e.ajax({
url:b,
error:function(e, t) {
_i_("d0b:94e012a2"), "abort" !== t ? h.trigger("iw-get-fail", h) :o(h), _r_();
},
success:function(e) {
if (_i_("d0b:d8ccd9d3"), !e) return _r_();
var t = r.find(i, function(e) {
return _i_("d0b:27c7b013"), _r_(e[0] === h);
}), a = t[3];
r.each(a, function(t) {
_i_("d0b:c79f83e1"), "function" == typeof t && e.b_hotels && t.apply(h, [ e.b_hotels[u.b_id] ]), _r_();
}), o(h), l(n, e.b_hotels[u.b_id]), h.trigger("iw-get-success", e), _r_();
}
}), g[0] = h, g[1] = n, g[2] = f, i.push(g), _r_(f);
}
function d(e) {
_i_("d0b:8e341a81"), "string" == typeof e || "number" == typeof e ? delete n[e] :n = {}, _r_();
}
function c(e) {
return _i_("d0b:4f71f71c"), _r_(n[e] ? n[e] :!1);
}
function l(e, t) {
_i_("d0b:8b49915e"), n[e] = t, _r_();
}
return _r_({
getIW:s,
clearIWCache:d
});
}), _r_();
}), B.atlas.define("iw", [ "jQuery", "geometry.point", "util-env" ], function(e, t, r) {
"use strict";
_i_("d0b:6b0430e2");
var i = {}, n = {
latLng:[ 0, 0 ],
offset:new t(0, 0),
className:"",
closeSelector:".iw-close",
mapOffset:new t(0, 0),
mapPadding:0,
content:"",
disablePan:!1,
engine:"html"
};
function a(e) {
return _i_("d0b:21e9cddc"), i[e] = B.jstmpl(e) && "__no_op__" !== B.jstmpl(e).name ? B.jstmpl(e) :B.jstmpl("atlas_iw_default"), _r_(i[e] || {
render:function() {}
});
}
function o() {
_i_("d0b:e0ebfcd1");
var t = this;
if (this.IW = this.IW || {}, this.IW.OPTIONS) return _r_();
this.IW.OPTIONS = e.extend({}, n, {
mapOffset:this.get("offset")
}), _(), this.on("offset-change", function(e) {
_i_("d0b:a9a6fbf8"), t.IW.OPTIONS.mapOffset = e, _r_();
}), _r_();
}
function _() {}
function s(t) {
_i_("d0b:1a59e6a5"), o.call(this), this.IW.OPTIONS = e.extend({}, this.IW.OPTIONS, t), _r_();
}
function d(e, t) {
_i_("d0b:12d00079"), this.IW.cur ? this.IW.cur.open(e, t) :this.IW.cur = new this.Interface.IW(e, this), _r_();
}
function c(t, r) {
_i_("d0b:7c24b8e7");
var i = {}, n = this.getMarker(t);
if (this.IW || o.call(this), n) return r = r || a.call(this, "atlas_iw_loading").render({}), e.extend(i, this.IW.OPTIONS, {
marker:n,
latLng:[ n.b_latitude, n.b_longitude ],
content:r,
type:n.b_type || ""
}), d.call(this, i, !0), _r_(this.IW);
_r_();
}
function l(t, r, i) {
_i_("d0b:14c3199d");
var n, _ = {}, s = this.getMarker(t);
if (this.IW || o.call(this), s) return n = s.b_iw_template || "atlas_iw_" + s.b_type, i = i || a.call(this, n).render(r), e.extend(_, this.IW.OPTIONS, {
marker:s,
latLng:[ s.b_latitude, s.b_longitude ],
content:i,
type:s.b_type || ""
}), d.call(this, _), this.trigger("iw-rendered", t), _r_(this.IW);
_r_();
}
function u(t, r, i, n) {
_i_("d0b:2c68cd4d");
var _, s = {};
this.IW || o.call(this), _ = !i && n ? a.call(this, n) :null, i = i || (_ ? _.render(r) :""), e.extend(s, this.IW.OPTIONS, {
latLng:[ t[0], t[1] ],
content:i
}), d.call(this, s), _r_();
}
function f() {
_i_("d0b:54228786"), this.IW && this.IW.cur && this.IW.cur.close(), _r_();
}
return _r_({
closeIW:f,
setIW:s,
openIW:l,
openIWLatLng:u,
openIWLoading:c
});
}), B.atlas.define("labels", [], function() {
"use strict";
_i_("d0b:ace82a03");
var e = B.require("promise");
function t(t) {
_i_("d0b:56ebdc8e");
var r, i = this;
return _r_(new e(function(e, n) {
if (_i_("d0b:bcd04a19"), !i.Interface.Overlay) return _r_();
r = i.get("labelOverlay") || i.set("labelOverlay", new i.Interface.Overlay({}, i)), t.resolve = e, r.add(t), _r_();
}));
}
function r() {
_i_("d0b:d82fcb37");
var e = this.get("labelOverlay");
if (!e || !this.Interface.Overlay) return _r_(!1);
return _r_(e.removeAll());
}
function i(e) {
_i_("d0b:d30c6908");
var t = this.get("labelOverlay");
if (!t || !this.Interface.Overlay) return _r_(!1);
return _r_(t.remove(e));
}
function n(e) {
_i_("d0b:03615646");
var t = this.get("labelOverlay"), r = {};
if (!t || !this.Interface.Overlay) return _r_(!1);
return t.getRenderedItems().forEach(function(t) {
_i_("d0b:b1ba0fd0"), t.id === e && (r = t), _r_();
}), _r_(r);
}
function a() {
_i_("d0b:0d9ae3c4");
var e = this.get("labelOverlay");
if (!e || !this.Interface.Overlay) return _r_(!1);
return _r_(e.getRenderedItems());
}
return _r_({
addLabel:t,
removeLabel:i,
removeLabels:r,
getLabels:a,
getLabel:n
});
}), B.atlas.define("hover", [ "util-env" ], function(e) {
_i_("d0b:4c97feb7");
function t(e) {
_i_("d0b:9fa46f39");
var t = this.Interface.getMarker(e);
t && t.b_behaviors && (t.b_behaviors.hover = !0), this.refreshMarker(t, !0), _r_();
}
function r(e) {
if (_i_("d0b:a066cce7"), "undefined" == typeof e) return this.setIconActive(void 0), _r_();
var t = this.getMarker(e);
t && t.b_behaviors && (t.b_behaviors.hover = !1), this.refreshMarker(t, !1), _r_();
}
function i(t) {
_i_("d0b:5911f04b");
var r = this.Interface.getActiveMarkers(), i = this, n = e.get("ddot") && !e.get("bbtoolMap");
r.forEach(function(e) {
_i_("d0b:ce4f437f"), e = i.getMarker(e.b_atlas_id), e && !!e.b_behaviors.active != (t === e.b_atlas_id) && (e.b_behaviors.active = t === e.b_atlas_id, i.refreshMarker(e, n ? !0 :void 0)), _r_();
}), _r_();
}
function n(t) {
_i_("d0b:845e0675");
var r = this.getMarker(t);
r && r.b_behaviors && (r.b_behaviors.visited = !0);
var i = e.get("ddot") && !e.get("bbtoolMap");
this.refreshMarker(r, i ? !0 :void 0), _r_();
}
return _r_({
setIconHover:t,
setIconOut:r,
setIconActive:i,
setIconVisited:n
});
}), B.atlas.define("markers", [ "util-object", "util-array", "util-env" ], function(e, t, r) {
_i_("d0b:e9ce5dc5");
function i() {
return _i_("d0b:f8504650"), _r_(this.Interface.getAllMarkersWithAtlasId());
}
function n(e) {
if (_i_("d0b:06e671e6"), !Array.isArray(e)) return _r_(e);
return e.forEach(function(e) {
_i_("d0b:a720dff3"), a(e), _r_();
}), _r_(e);
}
function a(e) {
_i_("d0b:3d366f99"), o(e), E(e), C(e), T(e), O(e), M(e), _r_();
}
function o(e) {
return _i_("d0b:4f84e4cf"), _r_(e.b_id = String(e.b_id));
}
function _(e, t) {
if (_i_("d0b:787a8ddb"), !Array.isArray(e)) return _r_();
var r = n(e);
return this.pruneMarkers(r), _r_(this.addMarkers(r, t));
}
function s() {
return _i_("d0b:0c11cef4"), _r_(this.Interface.getActiveMarkers());
}
function d() {
_i_("d0b:e2d6c132"), this.Interface.clearMarkers(), _r_();
}
function c(e) {
_i_("d0b:6cd2b77c"), this.Interface.clearMarker(e), _r_();
}
function l(e) {
if (_i_("d0b:a5e6b0e3"), !Array.isArray(e)) return _r_();
var t = n(e);
this.Interface.pruneOutboundedMarkers(), this.addMarkers(t), _r_();
}
function u(e, t) {
_i_("d0b:9126efe7");
var r = this.getMarker(e);
r && r.customUpdate && r.customUpdate(t), _r_();
}
function f(e) {
_i_("d0b:33299e6d");
for (var t, r, i = this.Interface.getActiveMarkers(), n = i.length; n--; ) {
for (t = i[n].b_atlas_id, r = e.length; r-- && e[r].b_atlas_id !== t; ) ;
0 > r && t && this.Interface.clearMarker(t);
}
_r_();
}
function b(t, r) {
if (_i_("d0b:f2740524"), !Array.isArray(t)) return _r_();
for (var i, a, o, _ = [], s = 0, d = n(t), c = d.length, l = B.require("promise"), u = [], f = this; c--; ) i = d[c], i && i.b_states && i.b_states.overlay ? (i.content = f.getMarkerContent(i), o = f.Interface.createMarker(i)) :(a = f.getMarkerIcon(i), i.zIndex = a.z + s++, o = f.Interface.createMarker(e.extend({}, i, {
icon:a
}))), o && u.push(o.promise), _.push([ i.b_latitude, i.b_longitude ]);
return r && "function" == typeof f.setBoundingBox && f.setBoundingBox(_), _r_(l.all(u).then(function(e) {
return _i_("d0b:e761439a"), f.trigger(f.EVENTS.MARKERS_RENDERED, e), _r_(e);
}));
}
function h(e) {
_i_("d0b:7b3e6109");
var t, r = this.getMarker(e);
r && (r.b_states && r.b_states.overlay ? this.Interface.setMarkerType(e, {
content:this.getMarkerContent(r),
zIndex:this.getMarkerZIndex(r)
}) :(t = this.getIcon(r.b_type), this.Interface.setMarkerType(e, t))), _r_();
}
function p(e) {
_i_("d0b:baba91b0"), this.Interface.centerMarker(e, this.get("offset")), _r_();
}
function g(e) {
_i_("d0b:2c972111"), this.Interface.panMarker(e, this.get("offset")), _r_();
}
function m(e, t) {
_i_("d0b:024d6743");
var r = this.getMarker(e);
t && r && (r.b_type = t, "function" == typeof this.updateMarkerStates && this.updateMarkerStates(r), this.refreshMarker(r)), _r_();
}
function v(e) {
return _i_("d0b:3d2ed909"), isNaN(Number(e)) || (e = "hotel_" + e), _r_(this.Interface.getMarker(e));
}
function y(e, t) {
return _i_("d0b:ca82bf21"), _r_(this.Interface.setMarkerOptions(e, t));
}
function k(e, t) {
if (_i_("d0b:f3de7a6d"), "function" == typeof this.Interface.animateMarker) return _r_(this.Interface.animateMarker(e, t));
_r_();
}
function w() {
return _i_("d0b:16941080"), _r_(this.Interface.markersExist());
}
function I(e) {
if (_i_("d0b:5feb5652"), "function" == typeof this.Interface.getMarkerPosition) return _r_(this.Interface.getMarkerPosition(e));
_r_();
}
function L(e, t) {
_i_("d0b:9d36f130"), t ? e.b_behaviors = t.b_behaviors || {} :e.b_behaviors = e.b_behaviors || {}, _r_();
}
function x(e, t) {
_i_("d0b:3a5fcb39"), t ? e.b_states = t.b_states :e.b_states = e.b_states || {}, _r_();
}
function M(e) {
_i_("d0b:df300f03"), e.b_states = e.b_states || {}, _r_();
}
function O(e) {
_i_("d0b:c48165fc"), e.b_behaviors = e.b_behaviors || {}, _r_();
}
function E(e) {
_i_("d0b:bad6c64f"), e.b_type = e.b_type || e.b_marker_type, e.b_marker_type && delete e.b_marker_type, _r_();
}
function T(e) {
return _i_("d0b:b3f1b1a6"), e.b_atlas_id = e.b_basic_type + "_" + e.b_id, _r_(e);
}
function C(e) {
return _i_("d0b:23af579d"), _r_(S(e));
}
function S(e) {
return _i_("d0b:46c0fae6"), /hotel/.test(e.b_type) && (e.b_basic_type = "hotel"), /city/.test(e.b_type) && (e.b_basic_type = "city"), /airport/.test(e.b_type) && (e.b_basic_type = "airport"), /user/.test(e.b_type) && (e.b_basic_type = "user"), x(e), /soldout/.test(e.b_type) && (e.b_states.soldout = !0), /comp_set/.test(e.b_type) && (e.b_states.compset = !0), /current/.test(e.b_type) && (e.b_states.current = !0), /hotel_sr/.test(e.b_type) && (e.b_states.searchresults = !0), /genius/.test(e.b_type) && (e.b_states.genius = !0), e.b_persistent && (e.b_states.persistent = !0), _r_(e);
}
function P(e, t) {
_i_("d0b:d2e623d1");
var r = this;
return e instanceof Array && e.forEach(function(e) {
_i_("d0b:e010fb3c");
var i;
E(e), S(e), T(e), i = r.getMarker(e.b_atlas_id), x(e, i), L(e, i), "function" == typeof t && t(e), _r_();
}), _r_(e);
}
function A(e, t) {
_i_("d0b:7bf98db0");
var i, n = e && e.b_atlas_id;
if (!n) return _r_();
if (e.b_states && e.b_states.overlay) {
if (i = {
zIndex:this.getMarkerZIndex(e)
}, "boolean" == typeof t) if (e = e.setMarkerClass ? e :this.getMarker(n), r.get("ddot") && !r.get("bbtoolMap")) {
var a = B.jstmpl("atlas_overlay_marker_classes").render(e);
e.overrideMarkerClasses && e.overrideMarkerClasses(a);
} else t ? e.setMarkerClass("hover") :e.removeMarkerClass("hover"); else i.content = this.getMarkerContent(e);
this.Interface.setMarkerType(n, i);
} else this.Interface.setMarkerType(n, this.getMarkerIcon(e));
this.trigger("marker-refresh", e), _r_();
}
function R(e) {
_i_("d0b:a9f6b792");
var t;
if (!e) return _r_();
return t = e && e.b_behaviors ? e.b_behaviors.hover || e.b_behaviors.active ? this.getHover(e.b_type) :e.b_behaviors.opened ? this.getOpened(e.b_type) :e.b_behaviors.visited ? this.getVisited(e.b_type) :this.getIcon(e.b_type) :this.getIcon(e.b_type), _r_(t);
}
return _r_({
addMarkers:b,
centerMarker:p,
clearMarkers:d,
clearMarker:c,
getActiveMarkers:s,
getMarker:v,
panMarker:g,
pruneMarkers:f,
resetMarkerType:h,
setMarkers:_,
setMarkerType:m,
setMarkerOptions:y,
updateMarkers:l,
animateMarker:k,
markersExist:w,
getMarkerPosition:I,
refreshMarker:A,
getMarkerIcon:R,
enforceMarkerFormat:P,
updateMarkerStates:S,
getAllMarkersWithAtlasId:i,
prepMarker:a,
prepMarkers:n,
updateMarker:u
});
}), B.atlas.define("markers-ajax", [ "jQuery", "util-env" ], function(e, t) {
"use strict";
_i_("d0b:43f51c31");
var r = [], i = B.require("promise");
function n(e) {
_i_("d0b:9ed9fce4");
var t = e.Interface ? e.Interface.getBoundingBox() :e.get("bounds"), r = "";
return t && t.SW ? r = [ t.SW[1], t.SW[0], t.NE[1], t.NE[0] ].join(",") :t && t.toMOMString && (r = t.toMOMString()), _r_(r);
}
function a(e) {
_i_("d0b:96010747");
var t, i, n;
for (t = 0, i = r.length; i > t; ++t) if (n = r[t], n[0] === e) return n[1].abort(), r.splice(t), _r_(!0);
return _r_(!1);
}
function o(o, _, s) {
_i_("d0b:0ce833ae");
var d, c = _ || this.getMarkersURL(), l = this, u = o || n(l);
if (s || a(l), !u) return _r_(i.reject());
return t.get("isSkiArea") && (c = c + ";dbl=" + u), l.trigger(l.EVENTS.MARKERS_GET_BEFORE, l), _r_(new i(function(t, i) {
_i_("d0b:b4892d7f"), d = e.ajax({
url:c + ";BBOX=" + u,
error:function(e, t) {
_i_("d0b:20e1bd06"), "abort" !== t && l.trigger(l.EVENTS.MARKERS_GET_FAIL, l), _r_();
},
success:function(e) {
if (_i_("d0b:e3a0a079"), s || l.trigger(l.EVENTS.MARKERS_GET_SUCCESS, e), !e) return l.trigger(l.EVENTS.MARKERS_GET_NO_DATA, e), _r_();
t(e), _r_();
}
}), s || r.push([ l, d ]), _r_();
}));
}
function _(e) {
return _i_("d0b:345fd73d"), _r_(this.set("markersOnMapURL", e || t.get("markersOnMapURL")));
}
function s() {
return _i_("d0b:ae3c9561"), _r_(this.get("markersOnMapURL") || t.get("markersOnMapURL"));
}
function d(e) {
_i_("d0b:2c1b4088");
var t = this.getMarkersURL();
return _r_(this.setMarkersURL(t.replace(/limit=([\d]*)/, "limit=" + parseInt(e, 10))));
}
return _r_({
getMarkers:o,
setLimit:d,
setMarkersURL:_,
getMarkersURL:s
});
}), B.atlas.define("atlas-marker-properties", [ "jQuery" ], function(e) {
_i_("d0b:ee1c6193");
var t, r = {}, i = {
hotel:{
width:31,
height:37
},
"default":{
width:18,
height:27
}
}, n = {
transport:{
"default":70,
current:1e3
},
landmark:{
"default":80,
current:1e3
},
airport:{
"default":90,
current:1e3
},
city:{
"default":300,
current:1e3
},
center_label:{
"default":1001,
current:1002
},
hotel:{
"default":401,
current:1e3,
active:1011
},
hotel_matching_criteria:{
"default":401,
current:1e3,
active:1011
},
hotel_soldout:{
"default":400,
current:1e3
},
hotel_company_favorite:{
"default":2999,
current:2999
},
DEFAULT:400
};
B.atlas.getVariant("ebccCcCcCDSSeCXeQUGIRKWe") && (n.top_landmark = {
"default":402,
current:1002
});
function a(e) {
_i_("d0b:23fc1a39");
var t;
return n[e.b_basic_type] && (t = n[e.b_basic_type]["default"], e.b_states && (e.b_states.current && (t = n[e.b_basic_type].current), e.b_states.active && (t = n[e.b_basic_type].active))), _r_(t || n.DEFAULT);
}
function o(e) {
_i_("d0b:f22b5132");
var t = e.b_type;
return e.b_states && (e.b_states.current && !/current/.test(e.b_type) && (t = e.b_type + "_current"), e.b_states.active && (t = e.b_type + "_active")), _r_(i[t] || i["default"]);
}
function _(e) {
return _i_("d0b:89d47587"), _r_(r[e] ? r[e].call() :0);
}
function s(r) {
_i_("d0b:7833261f");
var i = [];
return r.forEach(function(t) {
_i_("d0b:d640a571");
var r = e(B.jstmpl(t.b_template).render(t));
i.push(r), t.getDimension = function() {
return _i_("d0b:7f2321fc"), _r_({
height:r.outerHeight(),
width:r.outerWidth()
});
}, _r_();
}), t = t || e('<div class="gm-style" style="opacity: 0; left: -1000px; position: absolute"></div>').appendTo("#b_map_tiles"), t.html(i), r.forEach(function(e) {
_i_("d0b:cb279470"), Object.assign(e, e.getDimension()), _r_();
}), _r_(r);
}
function d(i) {
_i_("d0b:86c61585");
var n = [];
i.forEach(function(t) {
if (_i_("d0b:d8a988d0"), t.b_states && t.b_states.show_price && t.b_u_total_price) {
var i, a = e(B.jstmpl(t.b_template).render(t));
n.push(a), r[t.b_atlas_id] = function() {
return _i_("d0b:65fac3c1"), i || (i = a.find(".svg-marker-label").width()), _r_(i);
};
}
_r_();
}), t = t || e('<div style="opacity: 0; left: -1000px; position: absolute"></div>').appendTo("#b_map_tiles"), t.html(n), _r_();
}
function c(t) {
_i_("d0b:684bd6cd"), e.extend(!0, i, t), _r_();
}
function l(e) {
_i_("d0b:c5e6cb80"), i = e, _r_();
}
return _r_({
dimensions:i,
getMarkerDimension:o,
prepPriceMarkers:d,
override:c,
getLabelWidth:_,
getZIndex:a,
replace:l,
prepDynamicMarkers:s
});
}), B.atlas.define("overlay-markers-content", [], function() {
_i_("d0b:0b47345a");
var e = B.atlas.require("atlas-marker-properties");
function t(e) {
return _i_("d0b:fc3bb1c0"), _r_(e.b_template ? B.jstmpl(e.b_template).render(e) :B.jstmpl("atlas_overlay_marker").render(e));
}
function r(e) {
return _i_("d0b:af88df19"), _r_(e.b_zindex ? e.b_zindex :parseInt(B.jstmpl("atlas_overlay_marker_zindex").render(e), 10));
}
function i(t) {
_i_("d0b:53ed8208");
var r = e.getMarkerDimension(t);
return _r_({
w:r.disperseWidth || r.width,
h:r.disperseHeight || r.height
});
}
return _r_({
getMarkerContent:t,
getMarkerZIndex:r,
getMarkerDimension:i
});
}), B.atlas.define("offset", [ "geometry.point" ], function(e) {
"use strict";
_i_("d0b:9cf23559");
function t(t, r) {
_i_("d0b:b8491a8b");
var i = new e(t, r);
this.set("offset", i), this.trigger("offset-change", i), _r_();
}
return _r_({
setOffset:t
});
}), B.atlas.define("options", function() {
"use strict";
_i_("d0b:470b4cef");
function e(e, t) {
_i_("d0b:6799069e"), this.Interface.configZoomControl(e, t), _r_();
}
function t() {
_i_("d0b:d4a698cf"), this.Interface.hideZoomControl(), _r_();
}
function r(e) {
_i_("d0b:807edbe5"), this.Interface.setMaxZoom(e), this.set("maxZoom", e), _r_();
}
function i(e) {
_i_("d0b:262772f2"), this.Interface.setMinZoom(e), this.set("minZoom", e), _r_();
}
function n(e) {
_i_("d0b:ba80a526"), this.Interface.setZoom(e), _r_();
}
function a(e) {
_i_("d0b:d2792022"), this.Interface.setMapType(e), _r_();
}
function o() {
return _i_("d0b:ece45290"), _r_(this.Interface.getMapType());
}
function _() {
return _i_("d0b:2bf63a9e"), _r_(this.Interface.getZoom());
}
function s() {
return _i_("d0b:706c7a14"), _r_(this.Interface.enableScrollwheel());
}
function d() {
return _i_("d0b:871f3a3d"), _r_(this.Interface.disableScrollwheel());
}
return _r_({
configZoomControl:e,
hideZoomControl:t,
setMapType:a,
getMapType:o,
setMaxZoom:r,
setMinZoom:i,
setZoom:n,
getZoom:_,
enableScrollwheel:s,
disableScrollwheel:d
});
}), B.atlas.define("places", function() {
"use strict";
_i_("d0b:2474d918");
function e(e, t, r) {
if (_i_("d0b:66cffd24"), !e) return _r_();
this.Interface.getPlaceDetails(e, t, r), _r_();
}
function t(e, t) {
if (_i_("d0b:ac3ab379"), !e) return _r_();
"function" == typeof this.Interface.getGeocodeDetails && this.Interface.getGeocodeDetails(e, t), _r_();
}
function r(e, t, r) {
if (_i_("d0b:c5660639"), !e || !this.Interface.searchPlaces) return _r_();
this.Interface.searchPlaces(e, t, r), _r_();
}
function i() {
return _i_("d0b:22ac944e"), _r_(this.Interface.checkPlacesApi && this.Interface.checkPlacesApi());
}
return _r_({
checkPlacesApi:i,
getPlaceDetails:e,
getGeocodeDetails:t,
searchPlaces:r
});
}), B.atlas.define("polygons", [ "jQuery" ], function(e) {
"use strict";
_i_("d0b:212e0dbf");
var t = {
paths:[],
clickable:!0,
fillColor:"#0896ff",
fillOpacity:.1,
strokeColor:"#003580",
strokeOpacity:.7,
strokeWeight:3
};
function r(r) {
_i_("d0b:4a35b1ca");
var i, n = t, a = r.style && r.style.hover && r.style["default"];
return a && (n = e.extend({}, n, r.style["default"])), i = new this.Interface.Polygon(e.extend({}, n, r), this.Interface), i.on("mouseover", function(e) {
_i_("d0b:6f67dc6f1"), "function" == typeof r.mouseover && r.mouseover.call(this, e), a && i.setOptions(r.style.hover), _r_();
}).on("mouseout", function(e) {
_i_("d0b:450ac1741"), "function" == typeof r.mouseout && r.mouseout.call(this, e), a && i.setOptions(r.style["default"]), _r_();
}).on("click", function(e) {
_i_("d0b:881cf9011"), "function" == typeof r.click && r.click.call(this, e), _r_();
}), _r_(i);
}
function i(e, t) {
_i_("d0b:7ff39b7a");
for (var r = !1, i = +e[1], n = +e[0], a = 0, o = t.length - 1; a < t.length; o = a++) {
var _ = +t[a][1], s = +t[a][0], d = +t[o][1], c = +t[o][0], l = s > n != c > n && (d - _) * (n - s) / (c - s) + _ > i;
l && (r = !r);
}
return _r_(r);
}
return _r_({
createPolygon:r,
isPointInsidePolygon:i
});
}), B.atlas.define("zoom", function() {
"use strict";
_i_("d0b:1d3a67ef");
function e(e) {
_i_("d0b:8ccd3ee4");
var t, r = e || this.get("maxZoom"), i = this.getZoom();
return r > i ? (t = i + 1, this.setZoom(t), _r_(i + 1 === r ? !0 :!1)) :_r_(!0);
}
function t(e) {
_i_("d0b:230319ef");
var t, r = e || this.get("minZoom"), i = this.getZoom();
return i > r ? (t = i - 1, this.setZoom(t), _r_(i - 1 === r ? !0 :!1)) :_r_(!0);
}
return _r_({
incrementZoom:e,
decrementZoom:t
});
}), B.atlas.define("directions", [ "util-object", "util-array" ], function(e, t) {
_i_("d0b:698d145a");
function r(e, t) {
return _i_("d0b:63429960"), _r_(this.Interface.directionsServiceRoute(e, t));
}
function i(e) {
_i_("d0b:48147299"), this.Interface.directionsRenderer().setDirections(e), _r_();
}
function n() {
_i_("d0b:2003c7eb");
var e = this.Interface.directionsRenderer();
return _r_(e);
}
return _r_({
getDirectionsRoute:r,
directionsRenderer:n,
setDirections:i
});
}), B.atlas.define("reactive-module", function() {
"use strict";
_i_("d0b:d52de36d");
var e = {
store:null,
actions:{},
atlas:null,
settings:{},
_prepareCore:function(e, t, r) {
_i_("d0b:b9e26175"), this.store = e, this.actions = t, this.settings = Object.assign({}, this.settings, r), this.atlas = this.settings.atlas, _r_();
},
_prepareComponent:function() {
_i_("d0b:b6a1f2c0"), this.initialize && this.initialize.apply(this), _r_();
},
_prepareStore:function(e, t) {
_i_("d0b:bf6a0029"), this.getState && (this.prevState = this.getState(), this.store.subscribe(this._handleStoreUpdate.bind(this, !1)), this._handleStoreUpdate(!0)), _r_();
},
_handleStoreUpdate:function(e) {
_i_("d0b:675306c3");
var t = this.getState(), r = this.prevState;
this.prevState = t, (e || this.shouldComponentUpdate(t, r)) && (this.render && this.render(t, r), this.componentDidUpdate(t, r)), _r_();
},
shouldComponentUpdate:function(e, t) {
return _i_("d0b:c49f4147"), _r_(e !== t);
},
componentDidUpdate:function() {}
};
return _r_(function(t) {
return _i_("d0b:9f8942f8"), _r_(Object.assign({}, e, t));
});
}), B.atlas.define("reactive-component", function() {
"use strict";
_i_("d0b:efeb0f5e");
var e = B.require("component/reactive"), t = B.require("Atlas/reactive-module"), r = e.extend(t({
_prepareComponent:function() {
_i_("d0b:d3fd82c2"), this.el = document.createElement("DIV"), this.el.setAttribute("data-component", "dummy"), this.$el = $(this.el), this.settings.$placeholder.html(this.el), this.init(), _r_();
}
}));
return _r_(function(e) {
_i_("d0b:e25fd9ca");
var t = r.extend(e);
return _r_(new t());
});
}), B.atlas.define("state-utils", function() {
"use strict";
_i_("d0b:e9381884");
var e = B.require("redux"), t = B.require("Atlas/reactive-module"), r = B.require("Atlas/reactive-component"), i = B.require("Atlas/util-object");
function n(e, t, r) {
return _i_("d0b:0cc093d2"), _r_(e.dispatch({
type:t,
__arguments__:r
}));
}
function a() {
return _i_("d0b:985248bb"), _r_(n(arguments[0], arguments[1], [].slice.call(arguments, 2)));
}
function o(e, t) {
return _i_("d0b:b0aef510"), _r_(t.reduce(function(t, r) {
return _i_("d0b:ca2298a3"), t[r] = _(e, r), _r_(t);
}, {}));
}
function _(e, t) {
return _i_("d0b:eafd2f36"), _r_(function() {
_i_("d0b:cadf0877"), n(e, t, [].slice.call(arguments)), _r_();
});
}
function s(e, t, r, i) {
_i_("d0b:6f8ef4f6");
var n, a = e(r);
return n = i && i.actions ? i.actions :o(t, a.requiredActions || []), a._prepareCore(t, n, i), a._prepareComponent(), a._prepareStore(), _r_(a);
}
function d(t) {
return _i_("d0b:5278325e"), _r_(e.combineReducers(t.reduce(function(e, t) {
return _i_("d0b:ffecb2e9"), e[t.name] = function(e, r) {
return _i_("d0b:748c1788"), e = e || t.initialState, t[r.type] && (e = Object.assign({}, e), e = r.__arguments__ ? t[r.type].apply(t, [ e ].concat(r.__arguments__)) :t[r.type].call(t, e, r)), _r_(e);
}, _r_(e);
}, {})));
}
function c(t) {
return _i_("d0b:c57e534c"), _r_(e.combineReducers(t.reduce(function(e, t) {
return _i_("d0b:14875aed"), e[t.name] = function(e, r) {
return _i_("d0b:b89e2610"), e = e || t.initialState, t[r.type] && (e = i.deepClone(e), r.__arguments__ ? t[r.type].apply(t, [ e ].concat(r.__arguments__)) :t[r.type].call(t, e, r)), _r_(e);
}, _r_(e);
}, {})));
}
function l(t) {
return _i_("d0b:8527e3bb"), _r_(e.createStore(t, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()));
}
return _r_({
dispatch:a,
createActions:o,
initComponent:s.bind(null, r),
initModule:s.bind(null, t),
combineReducers:c,
combineReducersWithShallowCopy:d,
createStore:l
});
}), B.atlas.define("components/markers", function(e, t, r) {
_i_("d0b:7942efc8");
var i = B.atlas.require("util-object"), n = {};
t.init = function(e) {
_i_("d0b:2e4d7326"), e.subscribe(function() {
_i_("d0b:0b864519");
var t = e.getAllMarkersWithAtlasId(), r = e.getState().markers, a = Object.keys(r.activeMarkers);
r.deletedMarkers.forEach(function(t) {
_i_("d0b:1c7c60ff"), e.Interface.clearMarker(t), _r_();
}), a.forEach(function(e) {
_i_("d0b:89b7d944");
var a = r.activeMarkers[e];
t[e] && i.simpleDiff(a, n[e]) && t[e].update(a), _r_();
}), n = r.activeMarkers, _r_();
}), _r_();
}, _r_();
}), B.atlas.define("components/markers-actions", function(e, t, r) {
_i_("d0b:058a8d48"), r.exports = {
updateMarkers:function(e) {
return _i_("d0b:736fe4a0"), _r_({
type:"UPDATE_MARKERS",
payload:e
});
},
animateMarker:function(e, t) {
return _i_("d0b:f0959f56"), _r_({
type:"ANIMATE_MARKER",
payload:{
id:e,
animation:t
}
});
},
removeMarker:function(e) {
return _i_("d0b:afe88eed"), _r_({
type:"REMOVE_MARKER",
payload:e
});
},
removeMarkers:function(e) {
return _i_("d0b:1c893543"), _r_({
type:"REMOVE_MARKERS",
payload:e
});
},
setMarkerActive:function(e) {
return _i_("d0b:30fd1ffc"), _r_({
type:"SET_MARKER_ACTIVE",
payload:e
});
},
setMarkerVisited:function(e) {
return _i_("d0b:27382a36"), _r_({
type:"SET_MARKER_VISITED",
payload:e
});
}
}, _r_();
}), B.atlas.define("components/markers-reducer", function(e, t, r) {
_i_("d0b:2b787caa");
var i, n = B.atlas.require("jQuery"), a = B.atlas.require("atlas-marker-properties"), o = function(e, t) {
return _i_("d0b:5b5528e1"), _r_(e[t] ? e[t] :!1);
};
return _r_({
name:"markers",
initialState:{
activeMarkers:{},
deletedMarkers:[]
},
UPDATE_MARKERS:function(e, t) {
_i_("d0b:a7492124"), e.deletedMarkers.length = 0, t.payload.forEach(function(t) {
_i_("d0b:0c5ca929");
var r = o(e.activeMarkers, t.b_atlas_id);
r || (e.activeMarkers[t.b_atlas_id] = n.extend({}, t)), _r_();
}), _r_();
},
ADD_MARKER:function(e, t) {},
HIDE_MARKER:function(e, t) {
_i_("d0b:b61f1cb0"), i = o(e.activeMarkers, t.payload), i.b_behaviors.hidden = !0, _r_();
},
SET_MARKER_ACTIVE:function(e, t) {
_i_("d0b:cbbfd28d"), Object.keys(e.activeMarkers).forEach(function(t) {
if (_i_("d0b:95109dfb"), e.activeMarkers[t].b_states.active) {
var r = o(e.activeMarkers, t);
delete r.b_states.active, n.extend(r, a.getMarkerDimension(r), {
zIndex:a.getZIndex(r)
});
}
_r_();
}), t.payload && (i = o(e.activeMarkers, t.payload), i.b_states.active = !0, n.extend(i, a.getMarkerDimension(i), {
zIndex:a.getZIndex(i)
})), _r_();
},
SET_MARKER_VISITED:function(e, t) {
_i_("d0b:46743d95"), i = o(e.activeMarkers, t.payload), i && (i.b_states.visited = !0), _r_();
},
SET_ZINDEX:function(e, t) {
_i_("d0b:af6e273c"), i = o(e.activeMarkers, t.payload.markerId), i && (i.zIndex = t.payload.zIndex), _r_();
},
ANIMATE_MARKER:function(e, t) {
_i_("d0b:a94b9bc5");
var r, n = t.payload.animation;
i = o(e.activeMarkers, t.payload.id), r = "BOUNCE" === n ? "marker-effect-bounce" :"DROP" === n ? "marker-effect-rain" :n, Object.keys(i.b_behaviors).forEach(function(e) {
_i_("d0b:7e0795c8"), /^marker-effect/.test(e) && delete i.b_behaviors[e], _r_();
}), r && (i.b_behaviors[r] = !0), delete i.b_behaviors.hidden, _r_();
},
REMOVE_MARKER:function(e, t) {
_i_("d0b:4aa78ad9"), e.deletedMarkers.push(t.payload), delete e[t.payload], _r_();
},
REMOVE_MARKERS:function(e, t) {
_i_("d0b:fef54db5"), t.payload.forEach(function(t) {
_i_("d0b:01887761"), e.deletedMarkers.push(t), delete e[t], _r_();
}), _r_();
}
});
}), B.atlas.define("provider-google-autocomplete-result", [ "util-object", "util-array", "util-getset" ], function(e, t, r) {
"use strict";
_i_("d0b:e2eae9aa");
function i(e) {
_i_("d0b:3bfb4adb");
var r = [];
return t.each(e.slice(1), function(e) {
_i_("d0b:d9371a08"), e.value && r.push(e.value), _r_();
}), _r_(r.join(", "));
}
function n(e) {
return _i_("d0b:7124f750"), _r_(e && e.length ? e[0].value || "" :"");
}
function a(t, a) {
_i_("d0b:4071afa5");
var o = this, _ = {
map:a,
data:{
id:t.place_id,
title:n(t.terms),
address:i(t.terms),
description:t.description,
matched_substrings:t.matched_substrings,
types:t.types
}
};
e.extend(_, t), e.extend(o, r.call(o, _)), _r_();
}
return a.prototype.getDetails = function(e) {
_i_("d0b:407f9239");
var t = this.get("map"), r = this.get("place_id");
return _r_(t.getPlaceDetails({
placeId:r
}, e));
}, _r_(a);
}), B.atlas.define("provider-google-autocomplete", [ "jQuery", "util-array", "provider-google-autocomplete-result" ], function(e, t, r) {
"use strict";
_i_("d0b:8b5558f4");
var i, n = 4e3;
function a(e, t) {
_i_("d0b:acb9cb47");
var r = t.map && t.map.getBounds(), i = {
input:e.query
};
return r ? i.bounds = r :e.lat && e.lon && (i.location = new google.maps.LatLng(e.lat, e.lon), i.radius = Math.min(parseInt(e.radius, 10), n)), e.types && (i.types = e.types), _r_(i);
}
function o(e, i) {
_i_("d0b:c0015f29");
var n = [];
return e.length > 0 && t.each(e, function(e) {
_i_("d0b:224cdc21"), e.place_id && e.terms && n.push(new r(e, i)), _r_();
}), _r_(n);
}
function _(t, r, n) {
_i_("d0b:c2962058");
var _ = this, s = a(t, _);
i = i || new google.maps.places.AutocompleteService(), e.get("/gapi_monitor", {
type:"places_autocomplete"
}), "www" === B.env.b_site_type ? B.et.stage("bLTLbFNJNfAFBaTbAGO", 3) :"mdot" === B.env.b_site_type ? B.et.stage("bLTLbFNJNfAFBaTbAbCJO", 3) :"tdot" === B.env.b_site_type && B.et.stage("bLTLbFNJNfAFBaTbAbEYT", 3), window.performance && window.performance.mark && window.performance.mark("sss_carrier_google_places_call"), i.getPlacePredictions(s, function(e, t) {
if (_i_("d0b:df0e5b76"), window.performance && window.performance.mark && window.performance.measure) {
window.performance.mark("sss_carrier_google_places_call_end"), window.performance.measure("sss_carrier_google_places_call_measure", "sss_carrier_google_places_call", "sss_carrier_google_places_call_end");
var i = window.performance.getEntriesByName("sss_carrier_google_places_call_measure"), a = i[i.length - 1];
"www" === B.env.b_site_type ? B.et.goalWithValue("js_sss_carrier_google_places_call", parseInt(a.duration)) :"mdot" === B.env.b_site_type ? B.et.goalWithValue("js_sss_carrier_google_places_call_m", parseInt(a.duration)) :"tdot" === B.env.b_site_type && B.et.goalWithValue("js_sss_carrier_google_places_call_t", parseInt(a.duration));
}
t && t.indexOf("OK") > -1 && e ? r(o(e, _)) :"function" == typeof n && n(t, s), _r_();
}), _r_();
}
return _r_({
autocomplete:_
});
}), B.atlas.define("provider-google-bounds", function() {
"use strict";
_i_("d0b:19194b9c");
function e() {
_i_("d0b:27bf336c");
var e, t, r = this.map.getBounds(), i = null;
return r && (e = r.getSouthWest(), t = r.getNorthEast(), i = {
SW:[ e.lat(), e.lng() ],
NE:[ t.lat(), t.lng() ]
}), _r_(i);
}
return _r_({
getBoundingBox:e
});
}), B.atlas.define("provider-google-center", function() {
"use strict";
_i_("d0b:f6e4f81f");
function e(e) {
_i_("d0b:caf4ba7b");
var t = this.map.getCenter(), r = e ? {
x:-1 * e.x,
y:-1 * e.y
} :{}, i = e ? this.getOffsetLatLng([ t.lat(), t.lng() ], r) :t;
return _r_([ i.lat(), i.lng() ]);
}
function t(e, t) {
return _i_("d0b:7fa6adfa"), _r_(new google.maps.LatLng(e, t));
}
function r(e, t) {
_i_("d0b:d789bb2d"), this.map.panBy(e, t), _r_();
}
function i() {
_i_("d0b:f1a1c442"), google.maps.event.trigger(this.map, "resize"), _r_();
}
function n(e, t) {
_i_("d0b:9834df2a"), this.map.setCenter(this.getOffsetLatLng(e, t)), _r_();
}
function a(e, t) {
_i_("d0b:b636616a"), this.map.panTo(this.getOffsetLatLng(e, t)), _r_();
}
return _r_({
getCenter:e,
getLatLng:t,
panBy:r,
panTo:a,
resize:i,
setCenter:n
});
}), B.atlas.define("provider-google-circles", [ "jQuery" ], function(e) {
"use strict";
_i_("d0b:54fad282");
var t = [];
function r(e) {
return _i_("d0b:2f4ac4d9"), _r_(new google.maps.LatLng(e[0], e[1]));
}
function i(t, i) {
_i_("d0b:7ab2001d");
var n = {};
e.extend(n, t, {
center:r(t.center),
readius:t.readius,
map:i.map
}), this.ubber = i, this.core = new google.maps.Circle(n), _r_();
}
return i.prototype = {
setOptions:function(t) {
_i_("d0b:11e37ebc");
var i = {};
return t.center && (t.center = r(t.center)), e.extend(i, t), this.core.setOptions(i), _r_(this);
},
getCenter:function() {
_i_("d0b:76ba84f4");
var e = this.core.getCenter();
return _r_([ e.lat(), e.lng() ]);
},
on:function(e, r) {
_i_("d0b:a415b65e");
var i = this;
return t.push({
context:this,
evt:e,
handler:r,
listener:google.maps.event.addListener(this.core, e, function(t) {
_i_("d0b:0b035ccd");
var n = {};
t.latLng && (n.latLng = [ t.latLng.lat(), t.latLng.lng() ]), i.ubber.ubber.trigger("circle-" + e, this), r.call(i, n), _r_();
})
}), _r_(this);
},
off:function(e, r) {
_i_("d0b:dcf19843");
for (var i, n, a = t.length; a--; ) if (i = t[a], i.context === this && i.evt === e && i.handler === r) {
n = t.splice(a, 1), 1 === n.length && n[0].listener && n[0].listener.remove();
break;
}
return _r_(this);
},
setCenter:function(e) {
return _i_("d0b:cb567dbd"), this.core.setCenter(r(e)), _r_(this);
},
hide:function() {
return _i_("d0b:672ae103"), this.core.setVisible(!1), _r_(this);
},
show:function() {
return _i_("d0b:637aebf3"), this.core.setVisible(!0), _r_(this);
},
remove:function() {
_i_("d0b:d4958d13");
for (var e, r = t.length; r--; ) t[r].context === this && (e = t.splice(r, 1), 1 === e.length && e[0].listener && e[0].listener.remove());
return this.core.setMap(null), _r_(this);
}
}, _r_({
Circle:i
});
}), B.atlas.define("provider-google-events", [ "jQuery" ], function(e) {
"use strict";
_i_("d0b:6ce12046");
function t() {
_i_("d0b:2e76213f");
var e, t = google.maps.event, r = this.ubber;
t.addListener(this.map, "drag", function() {
_i_("d0b:ca1dbeb3"), r.trigger(r.EVENTS.DRAG), _r_();
}), t.addListener(this.map, "dragstart", function() {
_i_("d0b:3d73f74b"), r.trigger("drag-start"), _r_();
}), t.addListener(this.map, "dragend", function() {
_i_("d0b:d06566ff"), r.trigger("drag-end"), _r_();
}), t.addListener(this.map, "zoom_changed", function() {
_i_("d0b:f574332b");
var e = r.Interface, t = e && e.map ? e.map.getZoom() :0;
r.trigger("zoom", t), _r_();
}), t.addListener(this.map, "dblclick", function() {
_i_("d0b:647ceb28"), r.trigger("doubleclick"), _r_();
}), t.addListener(this.map, "click", function() {
_i_("d0b:74a0d345"), r.trigger("click", arguments[0]), _r_();
}), t.addListener(this.map, "idle", function() {
_i_("d0b:241ff3c9"), r.trigger("idle"), _r_();
}), t.addListener(this.map, "resize", function() {
_i_("d0b:a308af62"), r.trigger("resize"), _r_();
}), t.addListener(this.map, "bounds_changed", function() {
_i_("d0b:49b3f030"), e && clearTimeout(e), e = setTimeout(function() {
_i_("d0b:f08fdd10"), r.trigger("bounds-change"), _r_();
}, 150), r.trigger("view-changed"), _r_();
}), t.addListener(this.map, "tilesloaded", function() {
_i_("d0b:da116425"), r.trigger("tiles-loaded"), _r_();
}), t.addListener(this.map, "maptypeid_changed", function() {
_i_("d0b:9ce4d775"), r.trigger("google-map-type-change", this.getMapTypeId()), _r_();
}), _r_();
}
return _r_({
setEvents:t
});
}), B.atlas.define("provider-google-iw", [ "jQuery" ], function(e) {
"use strict";
_i_("d0b:02003d7e");
var t = "iw-overlay", r = "iw-overlay-loading", i = "iw-overlay-closing";
function n(t, r) {
_i_("d0b:7fd06db4");
var i = r.Interface.map;
this.ubber = r, this.config = {}, this.isOpen = !1, google.maps.OverlayView.call(this), e.extend(this.config, t), e.extend(this, new google.maps.OverlayView()), this.setMap(i), this.defer = e.Deferred(), _r_();
}
return n.prototype.remove = function() {
_i_("d0b:61313cd3"), this.$domNode && (this.$domNode.remove(), this.$domNode = null), this.setMap(null), _r_();
}, n.prototype.draw = function() {
_i_("d0b:6729367b");
var r = this, i = this.config, n = i.isFixed ? this.ubber.$domNode :e(this.getPanes().floatPane);
this.$domNode ? !i.isFixed && this.isOpen && this.setPosition() :(this.$domNode = e('<div class="' + t + '"/>'), this.$domNode.appendTo(n).bind("mousemove", function(e) {
_i_("d0b:2eabeba7"), e.stopPropagation(), _r_();
}).on("click", i.closeSelector, function(e) {
_i_("d0b:3366b641"), e.stopPropagation(), r.close(), _r_();
}), this.open()), this.defer.resolve(this.$domNode), _r_();
}, n.prototype.checkOverlay = function(t, r) {
_i_("d0b:3ad6d9f4");
var i = this.ubber.get("topOverlay"), n = i ? i :this.ubber.$domNode, a = this.getPanes().floatPane;
t && r.get(0) !== n.get(0) ? r.appendTo(n) :t || r.get(0) === a || r.appendTo(e(a)), _r_();
}, n.prototype.open = function(n, a) {
_i_("d0b:0e93fe29");
var o = e.extend(this.config, n || {}), _ = [ t, o.className ], s = this.$domNode, d = this.getProjection();
if (!d || !this.$domNode) return _r_();
this.$domNode.removeClass(i), this.checkOverlay(o.isFixed, s), a && _.push(r), s.attr("class", _.join(" ")).html(o.content).show(), this.setPosition(), o.disablePan || this.panMap(), this.isOpen = !0, this.ubber.trigger("iw-open", {
$infoWindow:s,
property:o.marker ? o.marker :{}
}), _r_();
}, n.prototype.getPosition = function(e, t) {
_i_("d0b:3ca9d11b");
var r = this.config;
return _r_({
x:t.x + r.offset.x - e.outerWidth() / 2,
y:t.y + r.offset.y
});
}, n.prototype.setPosition = function() {
_i_("d0b:0cb02a55");
var e, t, r, i = this.config, n = this.$domNode, a = this.getProjection(), o = i.getPosition || this.getPosition, _ = new google.maps.LatLng(i.latLng[0], i.latLng[1]);
if (!a || !this.$domNode) return _r_();
t = a.fromLatLngToDivPixel(_), r = a.fromLatLngToContainerPixel(_), n.css({
position:"absolute"
}), e = o.call(this, n, t, r), n.css({
top:e.y,
left:e.x
}), _r_();
}, n.prototype.close = function() {
_i_("d0b:8cb46d45"), this.$domNode && (this.isOpen = !1, this.$domNode.addClass(i), this.$domNode.hide(), this.ubber.trigger("iw-close", this.config)), _r_();
}, n.prototype.panMap = function() {
_i_("d0b:c7d48a0b");
var t = this.getMap(), r = this.config, i = e(t.getDiv()), n = this.$domNode, a = i.width(), o = i.height(), _ = n.outerWidth() / 2, s = n.outerHeight(), d = this.getProjection().fromLatLngToContainerPixel(new google.maps.LatLng(r.latLng[0], r.latLng[1])), c = 0, l = 0;
d.x < -r.offset.x + r.mapPadding + _ + r.mapOffset.x ? c = d.x + r.offset.x - r.mapPadding - _ - r.mapOffset.x :d.x + _ + r.offset.x + r.mapPadding > a && (c = d.x + _ + r.offset.x + r.mapPadding - a), d.y < -r.offset.y + r.mapPadding + r.mapOffset.y ? l = d.y + r.offset.y - r.mapPadding - r.mapOffset.y :d.y + s + r.offset.y + r.mapPadding > o && (l = d.y + s + r.offset.y + r.mapPadding - o), (0 !== c || 0 !== l) && t.panBy(c, l), _r_();
}, _r_({
IW:n
});
}), B.atlas.define("provider-google-markers", [ "util-array", "util-object", "provider-google-overlay-marker", "provider-google-overlay-marker-v2" ], function(e, t, r, i) {
"use strict";
_i_("d0b:8f509f5f");
var n = B.require("promise");
function a() {
_i_("d0b:2b324c02");
var e = google.maps.event, t = this.map.getBounds();
Object.keys(this.markersHashWithAtlasId).forEach(function(r) {
_i_("d0b:137ccb3a");
var i = this.markersHashWithAtlasId[r];
!t || t.contains(i.getPosition()) || i.data.b_persistent || (e.clearInstanceListeners(i), i.setMap(null), delete this.markersHash[i.b_id], delete this.markersHashWithAtlasId[i.b_atlas_id]), _r_();
}.bind(this)), _r_();
}
function o() {
_i_("d0b:81b6e181");
var e = this.map.getBounds();
if (!e) return _r_();
Object.keys(this.markersHashWithAtlasId).forEach(function(t) {
_i_("d0b:b92ae531");
var r = this.markersHashWithAtlasId[t];
r.setVisible(e.contains(r.getPosition())), _r_();
}.bind(this)), _r_();
}
function _() {
_i_("d0b:78ce4236"), Object.keys(this.markersHashWithAtlasId).forEach(function(e) {
_i_("d0b:1c59cbf4");
var t = this.markersHashWithAtlasId[e];
this.clearMarker(t), _r_();
}.bind(this)), this.markersHash = {}, this.markersHashWithAtlasId = {}, _r_();
}
function s(e) {
_i_("d0b:034d35d1");
var t = "object" == typeof e ? e :this.markersHashWithAtlasId[e];
t && (google.maps.event.clearInstanceListeners(t), t.setMap(null), delete this.markersHash[t.b_id], delete this.markersHashWithAtlasId[t.b_atlas_id]), _r_();
}
function d() {
return _i_("d0b:5fc83524"), _r_(Object.keys(this.markersHash).length > 0);
}
function c(e) {
return _i_("d0b:2a7627be"), _r_(this.markersHashWithAtlasId[e]);
}
function l() {
return _i_("d0b:d63b1828"), _r_(this.markersHashWithAtlasId);
}
function u() {
_i_("d0b:ae512707");
var e;
try {
e = Object.keys(this.markersHashWithAtlasId).map(function(e) {
_i_("d0b:72c3ba30");
var t = this.markersHashWithAtlasId[e], r = {};
return Object.keys(t).forEach(function(e) {
_i_("d0b:da3079c0"), /^b_/.test(e) && (r[e] = t[e]), _r_();
}), _r_(r);
}.bind(this));
} catch (t) {
var r, i;
try {
r = t.message, i = t.stack.slice(0, 800);
} catch (t) {}
window.onerror("Error in getActiveMarkers: " + r + i, "markers.js", 1, 1);
}
return _r_(e || []);
}
function f(e, t, r) {
_i_("d0b:a358a0a9");
var i, n = this.getMarker(e);
n && n.b_states && n.b_states.overlay ? (t.content && n.setContent(t.content), t.zIndex && n.setZIndex(t.zIndex)) :n && (n.iconType = r || n.iconType, i = {
url:t.url,
size:new google.maps.Size(t.w, t.h),
origin:new google.maps.Point(t.x, t.y)
}, t.scaleW && t.scaleH && (i.scaledSize = new google.maps.Size(t.scaleW, t.scaleH)), "undefined" != typeof t.offsetX && "undefined" != typeof t.offsetY && (i.anchor = new google.maps.Point(t.offsetX, t.offsetY)), n.setOptions({
icon:i,
zIndex:t.z
})), _r_();
}
function b(e, t) {
_i_("d0b:09f1588e");
var r = this, i = this.getMarker(e), n = r.map.getProjection();
i && (n ? r.map.setCenter(this.getOffsetLatLng(i.getPosition(), t)) :r.ubber.once("idle", function() {
_i_("d0b:29351d86"), r.map.setCenter(this.getOffsetLatLng(i.getPosition(), t)), _r_();
})), _r_();
}
function h(e, t) {
_i_("d0b:dbf3f34a");
var r = this, i = r.map.getProjection(), n = this.getMarker(e);
n && (i ? r.map.panTo(r.getOffsetLatLng(n.getPosition(), t)) :r.ubber.once("idle", function() {
_i_("d0b:803acdd4"), r.map.panTo(r.getOffsetLatLng(n.getPosition(), t)), _r_();
})), _r_();
}
function p(e, t) {
_i_("d0b:f196f8cf");
var r = this.getMarker(e);
r && r.setOptions(t), _r_();
}
function g(e) {
_i_("d0b:caa94e43");
var a, o, _, s = google.maps, d = s.event, c = this.ubber;
if (this.getMarker(e.b_atlas_id)) return _r_();
return e && e.b_states && e.b_states.overlay ? B.atlas.getVariant("ebcOOIBTOTOJNET") ? (i.init(), a = new i(e)) :B.atlas.getVariant("ebccCcCcCWNVdVTPREFHT") && "district" === e.b_type ? (i.init(), a = new i(e)) :(r.init(), a = new r(t.extend(e, {
zIndex:e.zIndex,
content:e.content,
position:new s.LatLng(e.b_latitude, e.b_longitude),
data:e
}))) :(o = e.icon, _ = {
url:o.url,
size:new s.Size(o.w, o.h),
origin:new s.Point(o.x, o.y)
}, o.scaleW && o.scaleH && (_.scaledSize = new s.Size(o.scaleW, o.scaleH)), "undefined" != typeof o.offsetX && "undefined" != typeof o.offsetY && (_.anchor = new google.maps.Point(o.offsetX, o.offsetY)), a = new s.Marker(t.extend(e, {
zIndex:e.zIndex,
position:new s.LatLng(e.b_latitude, e.b_longitude),
data:e,
icon:_
})), a.promise = n.resolve(a)), a.setMap(this.map), d.addListener(a, "click", function(e) {
_i_("d0b:41da47f2"), e && "function" == typeof e.preventDefault && e.preventDefault(), setTimeout(function() {
_i_("d0b:f26bba75"), c.trigger("marker-click", {
evt:e,
id:this.b_atlas_id,
type:this.b_type,
latLng:[ this.b_latitude, this.b_longitude ],
data:this
}), _r_();
}.bind(this), 0), _r_();
}), d.addListener(a, "mouseover", function(e) {
_i_("d0b:e9890479"), c.trigger("marker-hover", {
evt:e,
id:this.b_atlas_id,
type:this.b_type,
latLng:[ this.b_latitude, this.b_longitude ],
data:this
}), _r_();
}), d.addListener(a, "mouseout", function(e) {
_i_("d0b:f9fba63c"), c.trigger("marker-out", {
evt:e,
id:this.b_atlas_id,
type:this.b_type,
latLng:[ this.b_latitude, this.b_longitude ],
data:this
}), _r_();
}), this.markersHash[a.b_id] = a, this.markersHashWithAtlasId[a.b_atlas_id] = a, _r_(a);
}
function m(e, t) {
_i_("d0b:7971989c");
var r, i = this.getMarker(e), a = {
DROP:!0,
BOUNCE:!0,
"1":!0,
"2":!0
};
if (i && "function" == typeof i.setAnimation && (a[t] || null === t)) return "string" == typeof t ? (r = google.maps.Animation[t], "undefined" == typeof r && (r = null)) :r = "undefined" == typeof t ? google.maps.Animation.DROP :null, _r_(new n(function(e, t) {
_i_("d0b:209389cc"), i.setAnimation(r), e(), _r_();
}));
if (i && i.setMarkerClass) return _r_(new n(function(e, r) {
_i_("d0b:77d2f283"), i.setMarkerClass(t).on("animationend", function() {
_i_("d0b:50c1cad7"), e(), _r_();
}), _r_();
}));
_r_();
}
function v(e) {
_i_("d0b:0c4c7637");
var t, r, i = new google.maps.OverlayView(), n = this.getMarker(e);
return i.draw = function() {}, i.setMap(this.map), t = i.getProjection(), t && n && (r = t.fromLatLngToContainerPixel(n.getPosition())), i.setMap(null), _r_(r);
}
return _r_({
centerMarker:b,
clearMarker:s,
clearMarkers:_,
createMarker:g,
setMarkerOptions:p,
getMarker:c,
getActiveMarkers:u,
panMarker:h,
pruneOutboundedMarkers:a,
updateMarkersVisibiliy:o,
setMarkerType:f,
animateMarker:m,
markersExist:d,
getMarkerPosition:v,
getAllMarkersWithAtlasId:l
});
}), B.atlas.define("provider-google-offset", [ "geo.projection" ], function(e) {
"use strict";
_i_("d0b:296f24c2");
function t(t, r) {
_i_("d0b:0ecfc85b");
var i = this.map, n = "lat" in t ? t :new google.maps.LatLng(t[0], t[1]), a = i.getProjection();
return r && (a = e.pointToLatLng(r, i.getZoom()), n = new google.maps.LatLng(n.lat() - a.lat, n.lng() - a.lng)), _r_(n);
}
return _r_({
getOffsetLatLng:t
});
}), B.atlas.define("provider-google-options", function() {
"use strict";
_i_("d0b:1a9b9057");
function e(e, t) {
_i_("d0b:f936c854");
var r = google.maps.ZoomControlStyle, i = google.maps.ControlPosition;
this.map.setOptions({
zoomControl:!0,
zoomControlOptions:{
style:e && r.hasOwnProperty(e) ? r[e] :r.SMALL,
position:t && i.hasOwnProperty(t) ? i[t] :i.LEFT_CENTER
}
}), _r_();
}
function t() {
_i_("d0b:60c552cd"), this.map.setOptions({
zoomControl:!1
}), _r_();
}
function r(e) {
_i_("d0b:594c6041");
var t = e.toUpperCase(), r = google.maps.MapTypeId;
r.hasOwnProperty(t) && this.map.setMapTypeId(r[t]), _r_();
}
function i() {
return _i_("d0b:2646c8f0"), _r_(this.map.getMapTypeId());
}
function n(e) {
_i_("d0b:6cfff4ab"), this.map.setOptions({
maxZoom:e
}), _r_();
}
function a(e) {
_i_("d0b:a4052168"), this.map.setOptions({
minZoom:e
}), _r_();
}
function o(e) {
_i_("d0b:d22edfb8"), this.map.setOptions({
zoom:e
}), _r_();
}
function _() {
return _i_("d0b:88f1ec1a"), _r_(this.map.getZoom());
}
function s() {
return _i_("d0b:22815254"), _r_(this.map.setOptions({
scrollwheel:!0
}));
}
function d() {
return _i_("d0b:6adedcba"), _r_(this.map.setOptions({
scrollwheel:!1
}));
}
return _r_({
hideZoomControl:t,
configZoomControl:e,
setMapType:r,
getMapType:i,
setMaxZoom:n,
setMinZoom:a,
setZoom:o,
getZoom:_,
enableScrollwheel:s,
disableScrollwheel:d
});
}), B.atlas.define("provider-google-overlay", [ "util-object", "util-array", "geo.latLng" ], function(e, t, r) {
"use strict";
_i_("d0b:872fccb0");
var i = "map-overlay-", n = "map-overlay-rendered";
function a(e) {
_i_("d0b:47235b9b");
for (var t = e.options.queue; t.length; ) e.render(t.pop());
_r_();
}
function o(e) {
_i_("d0b:b56ffe42");
var t = e.options.type, r = e.getPanes();
switch (!0) {
case "map" === t:
return _r_(r.mapPane);

case "overlay" === t:
return _r_(r.overlayLayer);

case "marker" === t:
return _r_(r.markerLayer);

default:
return _r_(r.floatPane);
}
_r_();
}
function _(e) {
_i_("d0b:e9c3c885");
var t = e.domNode;
return t || (t = document.createElement("div"), t.innerHTML = e.content, t.style.position = "absolute"), t.id = e.id, t.className = [ t.className || "", n ].join(" "), _r_(t);
}
function s(t, r) {
_i_("d0b:a96c4ed4"), this.options = e.extend({
ubber:r,
queue:[],
items:[],
type:"float"
}, t), e.extend(this, new google.maps.OverlayView()), this.setMap(r.Interface.map), _r_();
}
return s.prototype.onAdd = function() {
_i_("d0b:63628aa6"), a(this), _r_();
}, s.prototype.render = function(e) {
_i_("d0b:12fb09fb");
var t = this.options, r = t.items, i = _(e || {});
return t.overlayNode = t.overlayNode || o(this), t.overlayNode.appendChild(i), this.position(e, i), r.push({
id:e.id,
options:e,
domNode:i
}), "function" == typeof e.resolve && e.resolve({
id:e.id,
options:e,
domNode:i,
Overlay:this
}), _r_(e.id);
}, s.prototype.position = function(e, t) {
_i_("d0b:2e83b9e9");
var i, n, a, o = this.getProjection(), _ = google.maps;
o && (i = e.coordinates instanceof r ? new _.LatLng(e.coordinates.lat, e.coordinates.lng) :e.coordinates instanceof _.LatLng ? e.coordinates :new _.LatLng(e.coordinates[0], e.coordinates[1]), n = o.fromLatLngToDivPixel(i), a = t.offsetWidth, e.direction ? t.style.left = n.x + "px" :t.style.left = n.x - a / 2 + "px", t.style.top = n.y + "px"), _r_();
}, s.prototype.add = function(t) {
_i_("d0b:ca830dbf");
var r = this.options, n = this.options.queue;
return t.id = t.id || e.uniqueId(i), r.overlayNode ? this.render(t) :(t.id = e.uniqueId(i), n.push(t)), _r_(t.id);
}, s.prototype.remove = function(e) {
_i_("d0b:f8d8c015");
var r, i, n = this.options.items, a = this.options.overlayNode;
r = t.findIndex(n, function(t) {
return _i_("d0b:1c46f3cb"), _r_(t.id === e);
}), r > -1 && (i = n.splice(r, 1)[0]), a && i && a.contains(i.domNode) && a.removeChild(i.domNode), _r_();
}, s.prototype.removeAll = function() {
_i_("d0b:527ffa70");
for (var e, t = this.options.items, r = this.options.overlayNode; r && t.length; ) e = t.pop().domNode, r.contains(e) && r.removeChild(e);
this.options.items = [], _r_();
}, s.prototype.draw = function() {
_i_("d0b:66975ed5");
var e, t = this;
a(this), e = this.options.items, e.forEach(function(e) {
_i_("d0b:9d88dd58"), t.position(e.options, e.domNode), _r_();
}), _r_();
}, s.prototype.onRemove = function() {
_i_("d0b:59d95ab5");
for (var e = this.options.items, t = this.options.overlayNode; t && e.length; ) t.removeChild(e.pop().domNode);
_r_();
}, s.prototype.getRenderedItems = function() {
return _i_("d0b:a21d1f06"), _r_(this.options.items);
}, _r_({
Overlay:s
});
}), B.atlas.define("provider-google-place-util", [ "util-object", "geo.latLng", "util-array" ], function(e, t, r) {
"use strict";
_i_("d0b:ef8ddcba");
function i(e, t) {
_i_("d0b:bd5d0e29");
var i, n = "", a = Number.POSITIVE_INFINITY;
return r.each(t, function(t) {
_i_("d0b:2142ab03"), i = r.findIndex(e, function(e) {
return _i_("d0b:74201371"), _r_(t === e);
}), i > -1 && a > i && (a = i, n = e[a]), _r_();
}), _r_(n);
}
function n(e) {
_i_("d0b:0ae0cd74");
var r = e.geometry && e.geometry.location ? e.geometry.location :new google.maps.LatLng(0, 0), n = new t(r.lat(), r.lng()), a = e.query || "";
return a && a.types && (e.type = i(e.types || [], a.types)), _r_({
id:e.place_id,
source:"google",
coordinates:n,
location:r,
data:e
});
}
function a(t) {
_i_("d0b:a3d15315");
var r = google.maps, i = e.extend({
position:this.get("location")
}, t || {}), n = i.icon;
return n && (i.icon = {
url:n.url,
size:new r.Size(n.w, n.h),
origin:new r.Point(n.x, n.y)
}, n.z && (i.zIndex = n.z)), _r_(i);
}
function o(e, t, r) {
_i_("d0b:03490d66");
var i, n, a, o = e[0];
for (i = 0, n = e.length; n > i; ++i) if (a = e[i], o.ratio = a.width / a.height, o.maxWidth = Math.ceil(r * o.ratio), o.maxHeight = r, o.maxWidth < t && (o.maxWidth = t, o.maxHeight = Math.ceil(t / o.ratio)), o.maxWidth <= a.width && o.maxHeight <= a.height) {
o = a;
break;
}
return _r_(o);
}
function _(e) {
_i_("d0b:90fcb3f4");
var t = google.maps.event, r = this;
t.addListener(e, "click", function(e) {
_i_("d0b:fe420cc0"), r.trigger("click", e), _r_();
}), t.addListener(e, "mouseover", function(e) {
_i_("d0b:0953dfe2"), r.trigger("mouseover", e), _r_();
}), t.addListener(e, "mouseout", function(e) {
_i_("d0b:668bb95f"), r.trigger("mouseout", e), _r_();
}), _r_();
}
function s(e) {
_i_("d0b:ebe42b7f");
var t = google.maps.event, r = this;
t.addListener(e, "closeclick", function(e) {
_i_("d0b:fd2870a7"), r.trigger("close", e), _r_();
}), _r_();
}
return _r_({
transform:n,
normalizeMarker:a,
setMarkerEvents:_,
setIWEvents:s,
getBestImage:o
});
}), B.atlas.define("provider-google-place", [ "pubsub", "provider-google-place-util", "util-object", "jQuery" ], function(e, t, r, i) {
"use strict";
_i_("d0b:1769cf48");
function n(i, n) {
_i_("d0b:12192bb4");
var a = t.transform(i), o = this;
a.atlas = n, a.data && (a.data.getImage = function(e) {
return _i_("d0b:610af46b"), _r_(o.getImage.call(o, e));
}), r.extend(this, e.call(this)), this.get = function(e) {
return _i_("d0b:8289f63b"), _r_(e ? a[e] :a.data);
}, this.set = function(e, t) {
if (_i_("d0b:4cf657ff"), e) return a[e] = t, _r_(t);
return _r_(void 0);
}, _r_();
}
return n.prototype.extend = function(e) {
return _i_("d0b:210960d9"), this.set("data", r.extend(this.get("data") || {}, e)), _r_(this);
}, n.prototype.render = function(e) {
_i_("d0b:6385f726"), this.get("atlas").Interface.map ? this.renderMarker(e) :this.renderHTML(e), this.set("isRendered", !0), _r_();
}, n.prototype.renderMarker = function(e) {
_i_("d0b:3ed8ab4b");
var r = this.get("marker"), i = this.get("atlas").Interface.map, n = google.maps, a = t.normalizeMarker.call(this, e);
if (!i) return _r_();
r ? (r.setOptions(a), r.setMap(i)) :(r = new n.Marker(a), r.setMap(i), t.setMarkerEvents.call(this, r), this.set("marker", r)), this.set("isRendered", !0), _r_();
}, n.prototype.renderHTML = function(e) {
_i_("d0b:a52a1210");
var t = this.get("$domNode"), r = i(this.get("atlas").get("resultsNode")), n = e.className, a = e.content || "";
t ? t.html(a) :(t = this.set("$domNode", i('<div class="' + n + '"/>')), t.html(a), r.append(t)), _r_();
}, n.prototype.remove = function() {
_i_("d0b:a3822cef"), this.get("atlas") && this.get("atlas").Interface.map ? this.removeMarker() :this.removeHTML(), this.set("isRendered", !1), _r_();
}, n.prototype.removeMarker = function() {
_i_("d0b:4ecd9a25");
var e = this.get("marker");
e && (e.setMap(null), e.set("marker", null)), _r_();
}, n.prototype.removeHTML = function() {
_i_("d0b:145a6866"), i(this.get("$domNode")).remove(), this.set("$domNode", null), _r_();
}, n.prototype.getImage = function(e) {
_i_("d0b:929c92dc");
var r, i = this.get("data"), n = e ? e.width :80, a = e ? e.height :80;
if (!i || !i.photos || !i.photos.length) return _r_(!1);
return r = t.getBestImage(i.photos, n, a), _r_({
attribution:r.html_attributions || "",
url:r.getUrl(r),
width:r.width,
height:r.height,
layout:r.ratio >= 1 ? "landscape" :"portrait"
});
}, n.prototype.getDetails = function(e) {
_i_("d0b:3a97a7da");
var t = this.get("atlas"), r = this.get("id");
t.getPlaceDetails({
placeId:r
}, e, this), _r_();
}, n.prototype.getMarkerConfig = function(e) {
_i_("d0b:651fd762");
var t, i = this.get("coordinates");
return t = {
b_id:this.get("id"),
b_latitude:i.lat,
b_longitude:i.lng,
data:this.get("data")
}, r.extend(t, e), _r_(t);
}, n.prototype.open = function(e) {
_i_("d0b:05950c41");
var i = this.get("iw"), n = this.get("marker"), a = this.get("atlas").Interface.map, o = r.extend({}, e || {});
if (!a) return _r_();
i ? i.setOptions(o) :(i = new google.maps.InfoWindow(o), t.setIWEvents.call(this, i), this.set("iw", i)), i && n && i.open(a, n), _r_();
}, n.prototype.close = function() {
_i_("d0b:39f3dba4");
var e = this.get("iw");
return _r_(e ? e.close() :!1);
}, _r_(n);
}), B.atlas.define("google-places", [ "jQuery", "util-array", "geo.latLng", "provider-google-place" ], function(e, t, r, i) {
"use strict";
_i_("d0b:410df46a");
function n(e, r, n) {
_i_("d0b:da4a51ca");
var a = [], o = n.exclude || [];
return t.each(e, function(e) {
_i_("d0b:0a5157fc");
var _ = !1;
t.each(o, function(r) {
_i_("d0b:b6ef9b49"), t.contains(e.types || [], r) && (_ = !0), _r_();
}), !_ && e.geometry && e.geometry.location && (e.query = n, a.push(new i(e, r))), _r_();
}), _r_(a);
}
function a(e) {
_i_("d0b:9d11e227");
var i, n, a = google.maps, o = e.bounds, _ = e.location;
return o && (i = o.getNorthEast(), n = o.getSouthWest(), e.bounds = new a.LatLngBounds(new a.LatLng(n.lat, n.lng), new a.LatLng(i.lat, i.lng))), _ instanceof r ? e.location = new a.LatLng(_.lat, _.lng) :t.isArray(_) && 2 === _.length && (e.location = new a.LatLng(_[0], _[1])), _r_(e);
}
function o() {
_i_("d0b:9855ecf4");
var e = this.ubber, t = this.map || e.get("attributionNode");
return _r_(e.get("placesService") || e.set("placesService", new google.maps.places.PlacesService(t)));
}
function _() {
_i_("d0b:4727955e");
var e = this.ubber;
return _r_(e.get("GeocodeService") || e.set("GeocodeService", new google.maps.Geocoder()));
}
function s(t, r, i) {
_i_("d0b:b1608e23");
var o = this.ubber, _ = this.getPlacesService();
if (o.trigger("places-search", t), !t || !r || !t.location && !t.bounds) return _r_();
t = a(t), e.get("/gapi_monitor", {
type:"places_nearby_search"
}), _.nearbySearch(t, function(e, a, _) {
_i_("d0b:5df2228e");
var s;
e && a === google.maps.places.PlacesServiceStatus.OK ? (s = n(e, o, t), s && s.length && r.call(i || o, s, _), o.trigger("places-search-success", s, _)) :o.trigger("places-search-fail", e), _r_();
}), _r_();
}
function d(t, r, n) {
_i_("d0b:1526eaeb");
var a = this.ubber, o = this.getPlacesService(), _ = "object" == typeof r, s = {
success:_ && r.success ? r.success :r,
error:_ && r.error ? r.error :function() {}
};
a.trigger("places-details", t), e.get("/gapi_monitor", {
type:"places_details"
}), o.getDetails(t, function(e, t) {
_i_("d0b:35cfed37");
var r, o = "fail";
t === google.maps.places.PlacesServiceStatus.OK && e ? (r = n instanceof i ? n.extend(e) :new i(e, a), s.success.call(n || a, r), o = "success") :s.error.call(n || a, t, o, e), n && n.trigger && n.trigger("place-details-" + o, r), a.trigger("places-details-" + o, r), _r_();
}), _r_();
}
function c(r, i) {
_i_("d0b:784efdda");
var n = this.ubber, a = this.getGeocodeService(), o = "object" == typeof i, _ = {
success:o && i.success ? i.success :i,
error:o && i.error ? i.error :function() {}
};
n.trigger("geocode-details", r), e.get("/gapi_monitor", {
type:"geocoding"
}), a.geocode(r, function(e, r) {
_i_("d0b:8b647413"), r === google.maps.GeocoderStatus.OK && t.isArray(e) && e[0] ? _.success.call(n, e[0]) :_.error.call(n, r, "fail", e), _r_();
}), _r_();
}
function l() {
return _i_("d0b:4d438d6a"), _r_(!!(google && google.maps && google.maps.places));
}
return _r_({
checkPlacesApi:l,
getPlacesService:o,
getPlaceDetails:d,
getGeocodeService:_,
getGeocodeDetails:c,
searchPlaces:s
});
}), B.atlas.define("provider-google-polygons", [ "jQuery" ], function(e) {
"use strict";
_i_("d0b:890e6b09");
var t = [];
function r(t) {
return _i_("d0b:7901ada8"), _r_(e.map(t, function(e) {
return _i_("d0b:4be36867"), _r_(new google.maps.LatLng(e[0], e[1]));
}));
}
function i(t, i) {
_i_("d0b:c3fa5d01");
var n = {};
e.extend(n, t, {
paths:r(t.paths),
map:i.map
}), this.ubber = i, this.core = new google.maps.Polygon(n), _r_();
}
return i.prototype = {
setOptions:function(t) {
_i_("d0b:3e157431");
var i = {};
return t.paths && (t.paths = r(t.paths)), e.extend(i, t), this.core.setOptions(i), _r_(this);
},
getCenter:function() {
_i_("d0b:79785e90");
var e, t = new google.maps.LatLngBounds();
return this.core.getPath().forEach(function(e) {
_i_("d0b:70c35c52"), t.extend(e), _r_();
}), e = t.getCenter(), _r_([ e.lat(), e.lng() ]);
},
on:function(e, r) {
_i_("d0b:09f2cda4");
var i = this;
return t.push({
context:this,
evt:e,
handler:r,
listener:google.maps.event.addListener(this.core, e, function(t) {
_i_("d0b:910c2485");
var n = {};
t.latLng && (n.latLng = [ t.latLng.lat(), t.latLng.lng() ]), i.ubber.ubber.trigger("polygon-" + e, n), r.call(i, n), _r_();
})
}), _r_(this);
},
off:function(e, r) {
_i_("d0b:dcf198431");
for (var i, n, a = t.length; a--; ) if (i = t[a], i.context === this && i.evt === e && i.handler === r) {
n = t.splice(a, 1), 1 === n.length && n[0].listener && n[0].listener.remove();
break;
}
return _r_(this);
},
setPaths:function(e) {
return _i_("d0b:2b85dbf3"), this.core.setPaths(r(e)), _r_(this);
},
hide:function() {
return _i_("d0b:672ae1031"), this.core.setVisible(!1), _r_(this);
},
show:function() {
return _i_("d0b:637aebf31"), this.core.setVisible(!0), _r_(this);
},
remove:function() {
_i_("d0b:d4958d131");
for (var e, r = t.length; r--; ) t[r].context === this && (e = t.splice(r, 1), 1 === e.length && e[0].listener && e[0].listener.remove());
return this.core.setMap(null), _r_(this);
}
}, _r_({
Polygon:i
});
}), B.atlas.define("provider-google-style", function() {
"use strict";
return _i_("d0b:000bfc02"), _r_({
setStyle:function(e) {
_i_("d0b:a7a3fb56"), this.map.setOptions({
styles:e
}), _r_();
}
});
}), B.atlas.define("provider-google-overlay-marker", [ "util-object" ], function(e) {
"use strict";
_i_("d0b:86012036");
var t = {
TOP_LEFT:1,
TOP:2,
TOP_RIGHT:3,
LEFT:4,
MIDDLE:5,
RIGHT:6,
BOTTOM_LEFT:7,
BOTTOM:8,
BOTTOM_RIGHT:9
}, r = B.require("promise");
function i(e) {
_i_("d0b:ed8f6bcd");
var i = this;
e = e || {}, this._ready = !1, this._dragging = !1, void 0 == e.visible && (e.visible = !0), void 0 == e.anchor && (e.anchor = t.BOTTOM), this.promise = new r(function(e, t) {
_i_("d0b:c6f7890c"), google.maps.event.addListener(i, "ready", function() {
_i_("d0b:79414f32"), e(this), _r_();
}), _r_();
}), this.setValues(e), _r_();
}
function n() {
return _i_("d0b:5cb6df4f"), _r_(this.get("visible"));
}
function a(e) {
_i_("d0b:1fa9ee6d"), this.set("visible", e), _r_();
}
function o() {
_i_("d0b:c223019d"), this._ready && (this._markerWrapper.style.display = this.getVisible() ? "" :"none", this.draw()), _r_();
}
function _(e) {
_i_("d0b:d90d8951"), this.set("flat", !!e), _r_();
}
function s() {
_i_("d0b:35ae5afd"), this.get("flat"), _r_();
}
function d() {
_i_("d0b:e7381c74");
var e = this._markerContent.offsetWidth;
return e != this.get("width") && this.set("width", e), _r_(this.get("width"));
}
function c() {
_i_("d0b:9250c4c5");
var e = this._markerContent.offsetHeight;
return e != this.get("height") && this.set("height", e), _r_(this.get("height"));
}
function l(e) {
_i_("d0b:e8b40546"), this.set("shadow", e), this.flat_changed(), _r_();
}
function u() {
return _i_("d0b:bcf3d7de"), _r_(this.get("shadow"));
}
function f() {
if (_i_("d0b:e5760c1c"), !this._ready) return _r_();
this._markerWrapper.style.boxShadow = this._markerWrapper.style.webkitBoxShadow = this._markerWrapper.style.mozBoxShadow = this.getFlat() ? "" :this.getShadow(), _r_();
}
function b(e) {
_i_("d0b:b886eabb"), this.set("zIndex", e), _r_();
}
function h() {
return _i_("d0b:f252294a"), _r_(this.get("zIndex"));
}
function p() {
_i_("d0b:0abffc3f"), this.getZIndex() && this._ready && (this._markerWrapper.style.zIndex = this.getZIndex()), _r_();
}
function g() {
return _i_("d0b:c78e9805"), _r_(this.get("draggable"));
}
function m(e) {
_i_("d0b:94d160fa"), this.set("draggable", !!e), _r_();
}
function v() {
_i_("d0b:34ada5d2"), this._ready && (this.getDraggable() ? this._addDragging(this._markerWrapper) :this._removeDragListeners()), _r_();
}
function y() {
return _i_("d0b:5e0b471f"), _r_(this.get("position"));
}
function k(e) {
_i_("d0b:3b5523a7"), this.set("position", e), _r_();
}
function w() {
_i_("d0b:cfc58d93"), this.draw(), _r_();
}
function I() {
return _i_("d0b:217fc718"), _r_(this.get("anchor"));
}
function L(e) {
_i_("d0b:471892f4"), this.set("anchor", e), _r_();
}
function x() {
_i_("d0b:fdf6de11"), this.draw(), _r_();
}
function M(e) {
_i_("d0b:2ffcd8ba");
var t, r = document.createElement("DIV");
if (r.innerHTML = e, 1 == r.childNodes.length) return _r_(r.removeChild(r.firstChild));
for (t = document.createDocumentFragment(); r.firstChild; ) t.appendChild(r.firstChild);
return _r_(t);
}
function O(e) {
if (_i_("d0b:11d54ce9"), !e) return _r_();
for (var t = e.firstChild; t; ) e.removeChild(t), t = e.firstChild;
_r_();
}
function E(e) {
_i_("d0b:23be22ab"), this.set("content", e), _r_();
}
function T() {
return _i_("d0b:45730900"), _r_(this.get("content"));
}
function C() {
if (_i_("d0b:c4758cd7"), !this._markerContent) return _r_();
this._removeChildren(this._markerContent);
var e = this.getContent();
e && ("string" == typeof e && (e = e.replace(/^\s*([\S\s]*)\b\s*$/, "$1"), e = this._htmlToDocumentFragment(e)), this._markerContent.appendChild(e), google.maps.event.trigger(this, "domready")), this._ready && this.draw(), _r_();
}
function S(e) {
if (_i_("d0b:e9ef1c56"), !this._ready) return _r_();
var t = "";
navigator.userAgent.indexOf(!0) ? ("dragging" == e && (t = "-moz-grabbing"), "dragready" == e && (t = "-moz-grab"), "draggable" == e && (t = "pointer")) :(("dragready" == e || "dragging" == e) && (t = "move"), "draggable" == e && (t = "pointer")), this._markerWrapper.style.cursor != t && (this._markerWrapper.style.cursor = t), _r_();
}
function P(e) {
if (_i_("d0b:11b0a1de"), !this.getDraggable()) return _r_();
if (!this._dragging) {
this._dragging = !0;
var t = this.getMap();
this._mapDraggable = t.get("draggable"), t.set("draggable", !1), this._mouseX = e.clientX, this._mouseY = e.clientY, this._setCursor("dragready"), this._markerWrapper.style.MozUserSelect = "none", this._markerWrapper.style.KhtmlUserSelect = "none", this._markerWrapper.style.WebkitUserSelect = "none", this._markerWrapper.unselectable = "on", this._markerWrapper.onselectstart = function() {
return _i_("d0b:1135dfc8"), _r_(!1);
}, this._addDraggingListeners(), google.maps.event.trigger(this, "dragstart");
}
_r_();
}
function A() {
if (_i_("d0b:b780c036"), !this.getDraggable()) return _r_();
this._dragging && (this._dragging = !1, this.getMap().set("draggable", this._mapDraggable), this._mouseX = this._mouseY = this._mapDraggable = null, this._markerWrapper.style.MozUserSelect = "", this._markerWrapper.style.KhtmlUserSelect = "", this._markerWrapper.style.WebkitUserSelect = "j", this._markerWrapper.unselectable = "off", this._markerWrapper.onselectstart = function() {}, this._removeDraggingListners(), this._setCursor("draggable"), google.maps.event.trigger(this, "dragend"), this.draw()), _r_();
}
function R(e) {
if (_i_("d0b:a9dee0d7"), !this.getDraggable() || !this._dragging) return this.stopDrag(), _r_();
var t = this._mouseX - e.clientX, r = this._mouseY - e.clientY, i = parseInt(this._markerWrapper.style.left, 10) - t, n = parseInt(this._markerWrapper.style.top, 10) - r;
this._markerWrapper.style.left = i + "px", this._markerWrapper.style.top = n + "px";
var a = this._getOffset(), o = new google.maps.Point(i - a.width, n - a.height), _ = this.getProjection();
this.setPosition(_.fromDivPixelToLatLng(o)), this._setCursor("dragging"), google.maps.event.trigger(this, "drag"), _r_();
}
function N() {
_i_("d0b:3329ae5a"), this._draggableListner && (google.maps.event.removeListener(this._draggableListner), delete this._draggableListner), this._setCursor(""), _r_();
}
function W(e) {
if (_i_("d0b:7e84d715"), !e) return _r_();
var t = this;
this._draggableListner = google.maps.event.addDomListener(e, "mousedown", function(e) {
_i_("d0b:439c939c"), t.startDrag(e), _r_();
}), this._setCursor("draggable"), _r_();
}
function D() {
_i_("d0b:a1370dc5");
var e = this;
this._markerWrapper.setCapture ? (this._markerWrapper.setCapture(!0), this._draggableListner = [ google.maps.event.addDomListener(this._markerWrapper, "mousemove", function(t) {
_i_("d0b:0f2a47b6"), e.drag(t), _r_();
}, !0), google.maps.event.addDomListener(this._markerWrapper, "mouseup", function() {
_i_("d0b:f4d49d63"), e.stopDrag(), e._markerWrapper.releaseCapture(), _r_();
}, !0) ]) :this._draggingListeners = [ google.maps.event.addDomListener(window, "mousemove", function(t) {
_i_("d0b:0f2a47b61"), e.drag(t), _r_();
}, !0), google.maps.event.addDomListener(window, "mouseup", function() {
_i_("d0b:dd4d7d87"), e.stopDrag(), _r_();
}, !0) ], _r_();
}
function z() {
if (_i_("d0b:56f16caa"), this._draggableListner) {
for (var e = 0, t = this._draggableListner[0]; t; e++) google.maps.event.removeListener(t), t = this._draggableListner[e];
this._draggingListeners.length = 0;
}
_r_();
}
function j() {
_i_("d0b:46bdb00b");
var e = this.getAnchor();
if ("object" == typeof e) return _r_(e);
var r = new google.maps.Size(0, 0);
if (!this._markerContent) return _r_(r);
this._contentHeight && this._contentWidth || (this._contentHeight = this._markerContent.offsetHeight, this._contentWidth = this._markerContent.offsetWidth);
var i = this._contentHeight, n = this._contentWidth;
switch (e) {
case t.TOP_LEFT:
break;

case t.TOP:
r.width = -n / 2;
break;

case t.TOP_RIGHT:
r.width = -n;
break;

case t.LEFT:
r.height = -i / 2;
break;

case t.MIDDLE:
r.width = -n / 2, r.height = -i / 2;
break;

case t.RIGHT:
r.width = -n, r.height = -i / 2;
break;

case t.BOTTOM_LEFT:
r.height = -i;
break;

case t.BOTTOM:
r.width = -n / 2, r.height = -i;
break;

case t.BOTTOM_RIGHT:
r.width = -n, r.height = -i;
}
return _r_(r);
}
function Z(e) {
_i_("d0b:e5b07016");
var t = {
BOUNCE:1,
DROP:2
};
if (!this._markerWrapper) return _r_();
e === t.DROP ? $(this._markerWrapper).addClass("marker-effect-rain").find(".marker-effect-rain-start").removeClass("marker-effect-rain-start") :e === t.BOUNCE ? $(this._markerWrapper).addClass("marker-effect-bounce").removeClass("marker-effect-rain") :$(this._markerWrapper).removeClass("marker-effect-bounce marker-effect-rain"), _r_();
}
function V() {
if (_i_("d0b:5397577c"), this._markerWrapper || (this._markerWrapper = document.createElement("DIV"), this._markerWrapper.style.position = "absolute"), this.getZIndex() && (this._markerWrapper.style.zIndex = this.getZIndex()), this._markerWrapper.style.display = this.getVisible() ? "" :"none", !this._markerContent) {
this._markerContent = document.createElement("DIV"), this._markerWrapper.appendChild(this._markerContent);
var e = this;
google.maps.event.addDomListener(this._markerContent, "click", function(t) {
_i_("d0b:0c9bdcb3"), google.maps.event.trigger(e, "click", t), _r_();
}), google.maps.event.addDomListener(this._markerContent, "mouseover", function(t) {
_i_("d0b:795387c5"), google.maps.event.trigger(e, "mouseover", t), _r_();
}), google.maps.event.addDomListener(this._markerContent, "mouseout", function(t) {
_i_("d0b:b55e8ea0"), google.maps.event.trigger(e, "mouseout", t), _r_();
}), google.maps.event.addDomListener(this._markerContent, "touchmove", function(e) {
_i_("d0b:4d506551"), e.preventDefault(), _r_();
});
}
this._ready = !0, this.content_changed(), this.flat_changed(), this.draggable_changed();
var t = this.getPanes();
t && t.overlayMouseTarget.appendChild(this._markerWrapper), google.maps.event.trigger(this, "ready"), _r_();
}
function H() {
if (_i_("d0b:983309fb"), !this._ready || this._dragging) return _r_();
var e = this.getProjection();
if (!e) return _r_();
var t = this.get("position"), r = e.fromLatLngToDivPixel(t), i = this._getOffset();
this._markerWrapper.style.top = r.y + i.height + "px", this._markerWrapper.style.left = r.x + i.width + "px", _r_();
}
function q() {
_i_("d0b:c23eebdc"), this._markerContent && this._markerContent.parentNode && this._markerContent.parentNode.removeChild(this._markerContent), this._markerWrapper && this._markerWrapper.parentNode && this._markerWrapper.parentNode.removeChild(this._markerWrapper), this._removeDraggingListners(), _r_();
}
function U(e) {
return _i_("d0b:bef61fc2"), _r_($(this._markerContent).find("div:first").addClass(e));
}
function G(e) {
return _i_("d0b:fdf30fe8"), _r_($(this._markerContent).find("div:first").removeClass(e));
}
function F(e) {
return _i_("d0b:754c19a4"), _r_($(this._markerContent).find("div:first").attr("class", e));
}
return i.init = function() {
if (_i_("d0b:7d6f3d60"), i._isInitialized) return _r_();
i.prototype = new google.maps.OverlayView(), e.extend(i.prototype, {
getVisible:n,
setVisible:a,
visible_changed:o,
setFlat:_,
getFlat:s,
getWidth:d,
getHeight:c,
setShadow:l,
getShadow:u,
flat_changed:f,
setZIndex:b,
getZIndex:h,
zIndex_changed:p,
getDraggable:g,
setDraggable:m,
draggable_changed:v,
getPosition:y,
setPosition:k,
position_changed:w,
getAnchor:I,
setAnchor:L,
anchor_changed:x,
_htmlToDocumentFragment:M,
_removeChildren:O,
setContent:E,
getContent:T,
content_changed:C,
_setCursor:S,
startDrag:P,
stopDrag:A,
drag:R,
_removeDragListeners:N,
_addDragging:W,
_addDraggingListeners:D,
_removeDraggingListners:z,
_getOffset:j,
onAdd:V,
draw:H,
onRemove:q,
setOptions:function(e) {
_i_("d0b:129f23b4");
var t = {
pointer:"pointer",
move:"move",
"default":"default"
};
e.cursor && t[e.cursor] && this._ready && (this._markerWrapper.style.cursor = t[e.cursor], delete e.cursor), this.setValues(e), _r_();
},
setAnimation:Z,
setMarkerClass:U,
removeMarkerClass:G,
overrideMarkerClasses:F
}), i._isInitialized = !0, _r_();
}, _r_(i);
}), B.atlas.define("provider-google-overlay-marker-v2", [ "util-object", "jQuery" ], function(e, t) {
_i_("d0b:c4259ca2");
var r = B.require("promise"), i = B.require("morphdom");
function n(e) {
_i_("d0b:d5b80ae2");
var t = this;
e.b_latitude && e.b_longitude && (this.position = new google.maps.LatLng(e.b_latitude, e.b_longitude)), this.data = e, this.b_id = e.b_id, this.b_atlas_id = e.b_atlas_id, this.b_type = this.type = e.b_type, B.atlas.getVariant("ebcOOIBTOTOJNET") || this.setValues(e), this.promise = new r(function(e, r) {
_i_("d0b:c6f7890c1"), google.maps.event.addListener(t, "ready", function() {
_i_("d0b:79414f321"), e(this), _r_();
}), _r_();
}), _r_();
}
var a = {
onAdd:function() {
_i_("d0b:a4210475");
var e = this.getPanes();
this._markerContainer = document.createElement("DIV"), google.maps.event.addDomListener(this._markerContainer, "click", function(e) {
_i_("d0b:670c0ad7"), google.maps.event.trigger(this, "click", e), _r_();
}.bind(this)), google.maps.event.addDomListener(this._markerContainer, "mouseover", function(e) {
_i_("d0b:c8b87236"), google.maps.event.trigger(this, "mouseover", e), _r_();
}.bind(this)), google.maps.event.addDomListener(this._markerContainer, "mouseout", function(e) {
_i_("d0b:451d588a"), google.maps.event.trigger(this, "mouseout", e), _r_();
}.bind(this)), this._markerContainer.innerHTML = B.jstmpl(this.data.b_template).render(this.data), e.overlayMouseTarget.appendChild(this._markerContainer), google.maps.event.trigger(this, "ready"), _r_();
},
draw:function() {
_i_("d0b:ab7defa4");
var e = this.getProjection(), t = e.fromLatLngToDivPixel(this.position), r = {
width:-(this.data.width / 2),
height:-this.data.height
};
this.data.clickMargin = this.data.clickMargin || 0;
var i = "position: absolute;left: " + (t.x + r.width - this.data.clickMargin) + "px;top: " + (t.y + r.height - this.data.clickMargin) + "px;width: " + (parseInt(this.data.width) + 2 * this.data.clickMargin) + "px;height: " + (this.data.height + 2 * this.data.clickMargin) + "px;";
this.data.zIndex && (i += "z-index:" + this.data.zIndex + ";"), this.cssString !== i && (this._markerContainer.style.cssText = i), this.cssString = i, _r_();
},
getPosition:function() {
return _i_("d0b:b193bfcf"), _r_(this.position || this.data.position);
},
onRemove:function() {
_i_("d0b:da935c7a"), this._markerContainer.parentNode.removeChild(this._markerContainer), _r_();
},
customUpdate:function(t) {
_i_("d0b:c3b11ac0"), e.extend(this.data, t), B.atlas.getVariant("ebcOOIBTOTOJNET") || this.setValues(t), 1 === this._markerContainer.childNodes.length && i && i(this._markerContainer.childNodes[0], B.jstmpl(this.data.b_template).render(this.data)), this.draw(), _r_();
},
setOptions:function(e) {
_i_("d0b:42b03cde"), this.customUpdate.call(this, e), _r_();
},
setZIndex:function(e) {},
setVisible:function(e) {}
};
return n.init = function() {
if (_i_("d0b:a386b81f"), n._isInitialized) return _r_();
e.extend(n.prototype, new google.maps.OverlayView(), a), n._isInitialized = !0, _r_();
}, _r_(n);
}), B.atlas.define("provider-google-directions", [ "util-array" ], function(e) {
"use strict";
_i_("d0b:3c343226");
var t = function() {
return _i_("d0b:6017fab9"), this._directionsService || (this._directionsService = new google.maps.DirectionsService()), _r_(this._directionsService);
}, r = function() {
return _i_("d0b:a9c36725"), this._directionsRenderer ? null === this._directionsRenderer.getMap() && this._directionsRenderer.setMap(this.map) :(this._directionsRenderer = new google.maps.DirectionsRenderer(), this._directionsRenderer.setMap(this.map)), _r_(this._directionsRenderer);
}, i = function(e, t) {
return _i_("d0b:add36b97"), e.origin instanceof Array && (e.origin = new google.maps.LatLng(e.origin[0], e.origin[1])), e.destination instanceof Array && (e.destination = new google.maps.LatLng(e.destination[0], e.destination[1])), _r_(this.directionsService().route(e, t));
};
return _r_({
directionsService:t,
directionsRenderer:r,
directionsServiceRoute:i
});
}), B.atlas.define("provider-google-transit-layer", function() {
"use strict";
_i_("d0b:cd6a2c58");
function e(e, t) {
_i_("d0b:7092109a"), this.map = t.map, this.transitLayer = new google.maps.TransitLayer(e), _r_();
}
return e.prototype = {
add:function() {
_i_("d0b:2660befe"), this.transitLayer.setMap(this.map), _r_();
},
remove:function() {
_i_("d0b:10d8729e"), this.transitLayer.setMap(null), _r_();
},
setOptions:function(e) {
_i_("d0b:8b65298b"), this.transitLayer.setOptions(e), _r_();
}
}, _r_({
TransitLayer:e
});
}), B.atlas.define("provider-google", [ "jQuery", "util-env", "provider-loader-v2", "provider-google-events", "provider-google-markers", "provider-google-bounds", "provider-google-center", "provider-google-options", "provider-google-iw", "provider-google-offset", "provider-google-polygons", "provider-google-circles", "google-places", "provider-google-overlay", "provider-google-autocomplete", "provider-google-style", "provider-google-directions", "provider-google-transit-layer" ], function(e, t, r, i, n, a, o, _, s, d, c, l, u, f, b, h, p, g) {
"use strict";
_i_("d0b:c9d710fb");
var m = t.get("googleMapsUrl"), v = !1, y = B.require("promise");
function k(e) {
return _i_("d0b:b62b10c6"), _r_(e instanceof Array ? e :!1);
}
function w(t, r) {
_i_("d0b:ac2bf3be"), this.markersHash = {}, this.markersHashWithAtlasId = {};
var n = google.maps, a = e(t.domNode).get(0), o = {
zoom:t.zoom,
center:Array.isArray(t.center) ? new n.LatLng(t.center[0], t.center[1]) :t.center,
styles:r.STYLES || [],
mapTypeControl:t.hasOwnProperty("mapTypeControl") ? t.mapTypeControl :!0,
maxZoom:t.maxZoom || 20,
minZoom:t.minZoom || 1,
streetViewControl:t.streetView || !1,
mapTypeId:t.mapTypeId ? t.mapTypeId :n.MapTypeId.ROADMAP,
panControl:t.hasOwnProperty("panControl") ? t.panControl :!0,
zoomControl:t.hasOwnProperty("zoomControl") ? t.zoomControl :!0,
scaleControl:t.hasOwnProperty("scaleControl") ? t.scaleControl :!0,
scrollwheel:t.hasOwnProperty("scrollwheel") ? t.scrollwheel :!0,
clickableIcons:t.hasOwnProperty("clickableIcons") ? t.clickableIcons :!0,
panControlOptions:{
position:t.hasOwnProperty("panPosition") && n.ControlPosition.hasOwnProperty(t.panPosition) ? n.ControlPosition[t.panPosition] :n.ControlPosition.TOP_LEFT
},
zoomControlOptions:{
style:t.hasOwnProperty("zoomStyle") && n.ZoomControlStyle.hasOwnProperty(t.zoomStyle) ? n.ZoomControlStyle[t.zoomStyle] :n.ZoomControlStyle.DEFAULT,
position:t.hasOwnProperty("zoomPosition") && n.ControlPosition.hasOwnProperty(t.zoomPosition) ? n.ControlPosition[t.zoomPosition] :n.ControlPosition.TOP_LEFT
},
mapTypeControlOptions:{
position:t.hasOwnProperty("mapTypePosition") && n.ControlPosition.hasOwnProperty(t.mapTypePosition) ? n.ControlPosition[t.mapTypePosition] :n.ControlPosition.TOP_RIGHT,
mapTypeIds:k(t.mapTypes)
},
streetViewControlOptions:{
position:t.hasOwnProperty("mapTypePosition") && n.ControlPosition.hasOwnProperty(t.streetViewPosition) ? n.ControlPosition[t.streetViewPosition] :n.ControlPosition.RIGHT_CENTER
},
gestureHandling:t.hasOwnProperty("gestureHandling") ? t.gestureHandling :"greedy",
fullscreenControl:t.hasOwnProperty("fullscreenControl") ? t.gestureHandling :!1
};
r.set("minZoom", o.minZoom), r.set("maxZoom", o.maxZoom), t.boundingBox && e.extend(o, r.defineBounds(t.boundingBox, a)), n.visualRefresh = !0, this.ubber = r, this.map = new n.Map(a, o), i.setEvents.call(this), _r_();
}
function I() {
_i_("d0b:cede0a9e"), this.bounds = new google.maps.LatLngBounds(), _r_();
}
I.prototype.extend = function(e) {
_i_("d0b:559f867d"), this.bounds.extend(new google.maps.LatLng(e[0], e[1])), _r_();
}, e.extend(w.prototype, n, a, o, _, s, d, c, l, u, f, b, h, p, g, {
Bounds:I,
fitBounds:function(e) {
_i_("d0b:ee0b1f5a"), this.map.fitBounds(e), _r_();
}
});
function L(e, t) {
return _i_("d0b:c789782d"), _r_(v ? y.resolve(new w(t, e)) :new r(m, e, "google").then(function() {
return _i_("d0b:6cebf00f"), v = !0, _r_(new w(t, e));
}));
}
return _r_({
init:L
});
}), B.atlas.define("provider-leaflet", [ "jQuery", "util-env", "provider-loader-v2" ], function(e, t, r, i) {
"use strict";
_i_("d0b:67e2187f");
var n, a = t.get("leafletURL"), o = !1, _ = B.require("promise");
function s(t, r) {
_i_("d0b:eb6f0cce");
var i = this;
this.markers = [], this.map = null, this.ubber = r, this.domNode = e(t.domNode).get(0);
var n = [ "provider-leaflet-normalize", "provider-leaflet-events", "provider-leaflet-markers", "provider-leaflet-bounds", "provider-leaflet-center", "provider-leaflet-options", "provider-leaflet-iw", "provider-leaflet-offset", "provider-leaflet-polygons", "provider-leaflet-circles" ];
n.forEach(function(e) {
_i_("d0b:1d0740f9"), Object.assign(i, B.atlas.require(e)), _r_();
}), i.initialize(B.atlas.require("leaflet"), t), _r_();
}
s.prototype = {
initialize:function(e, t) {
_i_("d0b:c028123a");
var r = this.normalizeOptions(t);
r.attributionControl = !1, n && n.remove(), this.map = e.map(this.domNode, r), n = this.map, this.setEvents(), r.mapTypeControl && e.atlasControlLayers(r.controlLayers, {
mapTypeId:r.mapTypeId
}).addTo(this.map), r.panControl !== !1 && e.panControl().addTo(this.map), (r.zoomPosition || r.zoomOptions) && (r.zoomOptions = r.zoomOptions || {}, this.configZoomControl("", r.zoomOptions.position || r.zoomPosition, r.zoomOptions)), _r_();
},
fitBounds:function(e) {
_i_("d0b:252184dc"), this.map.fitBounds(e), _r_();
}
};
function d(e, t) {
return _i_("d0b:dd7ac2a4"), _r_(o ? _.resolve(new s(t, e)) :new r(a, e, "leaflet").then(function() {
return _i_("d0b:6cebf00f1"), o = !0, _r_(new s(t, e));
}));
}
return _r_({
init:d
});
}), B.atlas.define("mapbox-gl-test", function() {
_i_("d0b:b051ca01");
function e(e) {
return _i_("d0b:fa3f974a"), _r_(!!(t() && r() && i() && n() && a() && o() && _() && d(e && e.failIfMajorPerformanceCaveat)));
}
function t() {
return _i_("d0b:8476ee6c"), _r_("undefined" != typeof window && "undefined" != typeof document);
}
function r() {
return _i_("d0b:d92d7f29"), _r_(Array.prototype && Array.prototype.every && Array.prototype.filter && Array.prototype.forEach && Array.prototype.indexOf && Array.prototype.lastIndexOf && Array.prototype.map && Array.prototype.some && Array.prototype.reduce && Array.prototype.reduceRight && Array.isArray);
}
function i() {
return _i_("d0b:19958b33"), _r_(Function.prototype && Function.prototype.bind);
}
function n() {
return _i_("d0b:45c57c00"), _r_(Object.keys && Object.create && Object.getPrototypeOf && Object.getOwnPropertyNames && Object.isSealed && Object.isFrozen && Object.isExtensible && Object.getOwnPropertyDescriptor && Object.defineProperty && Object.defineProperties && Object.seal && Object.freeze && Object.preventExtensions);
}
function a() {
return _i_("d0b:f2e0e9a1"), _r_("JSON" in window && "parse" in JSON && "stringify" in JSON);
}
function o() {
if (_i_("d0b:35cccb58"), !("Worker" in window && "Blob" in window && "URL" in window)) return _r_(!1);
var e, t, r = new Blob([ "" ], {
type:"text/javascript"
}), i = URL.createObjectURL(r);
try {
t = new Worker(i), e = !0;
} catch (n) {
e = !1;
}
return t && t.terminate(), URL.revokeObjectURL(i), _r_(e);
}
function _() {
return _i_("d0b:65324062"), _r_("Uint8ClampedArray" in window);
}
var s = {};
function d(e) {
return _i_("d0b:3aaf2274"), void 0 === s[e] && (s[e] = c(e)), _r_(s[e]);
}
e.webGLContextAttributes = {
antialias:!1,
alpha:!0,
stencil:!0,
depth:!0
};
function c(t) {
_i_("d0b:28557f42");
var r = document.createElement("canvas"), i = Object.create(e.webGLContextAttributes);
return i.failIfMajorPerformanceCaveat = t, _r_(r.probablySupportsContext ? r.probablySupportsContext("webgl", i) || r.probablySupportsContext("experimental-webgl", i) :r.supportsContext ? r.supportsContext("webgl", i) || r.supportsContext("experimental-webgl", i) :r.getContext("webgl", i) || r.getContext("experimental-webgl", i));
}
return _r_({
isSupported:e
});
}), B.atlas.define("provider-mapbox-gl", [ "jQuery", "util-env", "provider-loader-v2", "util-array" ], function(e, t, r, i, n) {
"use strict";
_i_("d0b:3ef68660");
var n, a = t.get("mapboxGlURL"), o = "https://api.tiles.mapbox.com/mapbox-gl-js/v0.47.0/mapbox-gl.js", _ = !1, s = B.require("promise"), d = B.atlas.require("atlas-marker-properties");
function c(t, r) {
_i_("d0b:13972db2");
var i = this;
this.markersHashWithAtlasId = {}, this.map = null, this.ubber = r, this.domNode = e(t.domNode).get(0), this.options = {}, this.options.animateZoom = t.animateZoom || !0, t.minZoom = t.minZoom || 1, t.maxZoom = t.maxZoom || 20, n = B.atlas.require("atlas-mapbox-gl/marker"), r.set("minZoom", t.minZoom), r.set("maxZoom", t.maxZoom), B.atlas.require([ "atlas-mapbox-gl/events", "atlas-mapbox-gl/iw", "atlas-mapbox-gl/markers" ], function() {
_i_("d0b:82598b66");
var r = [].slice.apply(arguments);
r.forEach(function(t) {
_i_("d0b:f8b32fca"), e.extend(i, t), _r_();
}), i.initialize(null, t), _r_();
}), _r_();
}
c.prototype = {
initialize:function(e, t) {
_i_("d0b:01b64253");
var r = this;
mapboxgl.accessToken = "pk.eyJ1IjoibWFwYm94LWJvb2tpbmciLCJhIjoiY2pneG9pMXhsMGRkOTJxcGR6NTc2ZHN1byJ9.wDV1Vpf5m-DR386zGg4Bew", r.map = new mapboxgl.Map({
container:this.domNode,
style:"mapbox://styles/mapbox-booking/cjk9164r40jx52rnyk9s2tjqo",
center:new mapboxgl.LngLat(t.center[1], t.center[0]),
zoom:t.zoom
}), r.setEvents(), _r_();
},
getZoom:function() {
return _i_("d0b:ba006ed9"), _r_(this.map.getZoom());
},
setZoom:function(e) {
return _i_("d0b:55667eb8"), _r_(this.options.animateZoom ? this.map.zoomTo(e) :this.map.setZoom(e));
},
getMarker:function(e) {
return _i_("d0b:12a42345"), _r_(this.markersHashWithAtlasId[e]);
},
enableScrollwheel:function() {
return _i_("d0b:460fef74"), _r_(!0);
},
getCenter:function() {
return _i_("d0b:84d264a8"), _r_(this.map.getCenter());
},
getBoundingBox:function() {
_i_("d0b:4afa1a39");
var e = this.map.getBounds(), t = e.getSouthWest(), r = e.getNorthEast();
return _r_({
SW:[ t.lat, t.lng ],
NE:[ r.lat, r.lng ]
});
},
getActiveMarkers:function() {
_i_("d0b:b70480a4");
var e = this, t = Object.keys(e.markersHashWithAtlasId).map(function(t) {
_i_("d0b:beb9089b");
var r = e.markersHashWithAtlasId[t], i = {};
return Object.keys(r).forEach(function(e) {
_i_("d0b:da3079c01"), /^b_/.test(e) && (i[e] = r[e]), _r_();
}), _r_(i);
});
return _r_(t || []);
},
createMarker:function(t) {
_i_("d0b:d2068323");
var r = this;
if (this.markersHashWithAtlasId[t.b_atlas_id]) return _r_();
if (t && t.b_states && t.b_states.overlay) {
var i = document.createElement("DIV"), a = e(B.jstmpl(t.b_template).render(t)), o = d.getMarkerDimension(t);
e(i).html(a);
var _ = new n(i, {
offset:[ 0, -o.height / 2 ]
}).setLngLat([ t.b_longitude, t.b_latitude ]).addTo(this.map);
_.set("$markerContent", a), _.set("markerData", _.data), e.extend(_, t, {
data:t
}), e(i).on("click mouseover mouseout", function(e) {
_i_("d0b:cd8423ef");
var t = e.type.replace("over", "hover").replace("mouse", "");
r.ubber.trigger("marker-" + t, {
evt:e,
id:_.b_atlas_id,
b_atlas_id:_.b_atlas_id,
type:_.b_type,
latLng:[ _.b_latitude, _.b_longitude ],
data:_.data
}), _r_();
}), this.markersHashWithAtlasId[_.b_atlas_id] = _;
}
_r_();
},
animateMarker:function(e, t) {
_i_("d0b:1913a02b");
var r = this.getMarker(e), i = {
BOUNCE:!0,
DROP:!0,
"1":!0,
"2":!0
};
if (r && "function" == typeof r.setAnimation && (i[t] || null === t)) return _r_(new s(function(e, i) {
_i_("d0b:e14377a9"), r.setAnimation(t), e(), _r_();
}));
if (r && r.setMarkerClass) return _r_(new s(function(e, i) {
_i_("d0b:ff292aba"), r.setMarkerClass(t).on("animationend", function() {
_i_("d0b:5331391d"), e(), _r_();
}), _r_();
}));
_r_();
},
setCenter:function(e) {
_i_("d0b:9f94524a"), this.map.setCenter(e), _r_();
},
setMarkerType:function(e, t, r) {
_i_("d0b:248d736d");
var i = this.getMarker(e);
i && i.b_states && i.b_states.overlay && t.zIndex && i.setZIndexOffset(t.zIndex), _r_();
},
IW:function() {},
Polygon:u,
Bounds:l,
fitBounds:function(e) {
_i_("d0b:5d68fd24"), this.map.fitBounds(e), _r_();
}
};
function l() {
_i_("d0b:7831d1da"), this.bounds = new mapboxgl.LngLatBounds(), _r_();
}
l.prototype.extend = function(e) {
_i_("d0b:b87802ab"), this.bounds.extend(new mapboxgl.LngLat(e[1], e[0])), _r_();
};
function u(e, t) {
_i_("d0b:8c39dc43");
var r = Math.floor(1e5 * Math.random());
this.map = t.map, this.layer_id = "polygon-layer_" + r, this.layer_border_id = "polygon-layer_border_" + r;
var i = e.paths.map(function(e) {
return _i_("d0b:8fd69782"), _r_([ e[1], e[0] ]);
});
this.map.addLayer({
id:this.layer_id,
type:"fill",
source:{
type:"geojson",
data:{
type:"Feature",
geometry:{
type:"Polygon",
coordinates:[ i ]
}
}
},
paint:{
"fill-color":e.fillColor,
"fill-opacity":e.fillOpacity
}
}), this.map.addLayer({
id:this.layer_border_id,
type:"line",
source:{
type:"geojson",
data:{
type:"Feature",
geometry:{
type:"Polygon",
coordinates:[ i ]
}
}
},
paint:{
"line-color":e.strokeColor,
"line-width":e.strokeWeight,
"line-opacity":e.strokeOpacity
},
"fill-antialias":!0
}), _r_();
}
u.prototype = {
on:function() {
return _i_("d0b:448c6b5d"), _r_(this);
},
off:function() {
return _i_("d0b:448c6b5d1"), _r_(this);
},
hide:function() {
return _i_("d0b:acefa631"), this.map.setLayoutProperty(this.layer_id, "visibility", "none"), this.map.setLayoutProperty(this.layer_border_id, "visibility", "none"), _r_(this);
},
show:function() {
return _i_("d0b:973e0576"), this.map.setLayoutProperty(this.layer_id, "visibility", "visible"), this.map.setLayoutProperty(this.layer_border_id, "visibility", "visible"), _r_(this);
}
};
function f(t, i) {
return _i_("d0b:1a2ee8b4"), _r_(_ ? s.resolve(new c(i, t)) :new s(function(t) {
_i_("d0b:921e3a39"), e.getScript(o).done(t), _r_();
}).then(function() {
return _i_("d0b:1378129c"), _r_(new r(a, t, "mapbox").then(function() {
return _i_("d0b:d1700580"), _ = !0, _r_(new c(i, t));
}));
}));
}
return _r_({
init:f,
isSupported:function() {
return _i_("d0b:ad68723d"), _r_(B.atlas.require("mapbox-gl-test").isSupported());
}
});
}), B.atlas.define("provider-loader-v2", [ "jQuery", "util-env" ], function(e, t) {
"use strict";
_i_("d0b:202cb503");
var r = t.get("killSwitch"), i = B.require("promise");
function n(e, t, r) {
return _i_("d0b:7163225d"), _r_("google" === r ? this.append(e, "GLOBAL_ATLAS_GOOGLE_MAPS_CALLBACK", t) :this.get(e, t));
}
n.prototype.append = function(e, t, n) {
_i_("d0b:12c7265d");
var o = this, _ = document.createElement("script"), s = function(e, t, r) {
_i_("d0b:bb0072f3"), e.trigger(e.EVENTS.API_LOADED, e), t.isLoaded = !0, r(), _r_();
};
return _r_(new i(function(i, d) {
_i_("d0b:5d83ecd2"), r && d(), "object" == typeof window.google && window.google.maps ? s(n, o, i) :(window[t] = function() {
_i_("d0b:ca04f786"), s(n, o, i), _r_();
}, n.get("channel") && (e = a(e, "channel", n.get("channel"))), _.type = "text/javascript", _.src = e, document.body.appendChild(_), o.isLoading = !0), _r_();
}));
}, n.prototype.get = function(t, n) {
_i_("d0b:392cc41a");
var o = this;
return _r_(new i(function(i, _) {
_i_("d0b:6ef8014f"), r && _(), n.get("channel") && (t = a(t, "channel", n.get("channel"))), e.getScript(t, function() {
_i_("d0b:92565f72"), n.trigger(n.EVENTS.API_LOADED, n), o.isLoaded = !0, i(), _r_();
}), o.isLoading = !0, _r_();
}));
};
function a(e, t, r) {
_i_("d0b:9e6b3219");
var i = new RegExp("\\b(" + t + "=).*?(&|$)");
if (e.search(i) >= 0) return _r_(e.replace(i, "$1" + r + "$2"));
return _r_(e + (e.indexOf("?") > 0 ? "&" :"?") + t + "=" + r);
}
return _r_(n);
}), B.atlas.define("provider-loader", [ "jQuery", "util-env" ], function(e, t) {
"use strict";
_i_("d0b:3c53b282");
var r = t.get("killSwitch"), i = {};
function n(e, t) {
if (_i_("d0b:d8c252cd"), i.hasOwnProperty(e)) return _r_(i[e]);
this.url = e, this.isLoading = !1, this.isLoaded = !1, this.stack = [], this.Interface = t, i[e] = this, _r_();
}
n.prototype = {
queue:function() {
_i_("d0b:426de813");
var e = [].slice.call(arguments, 0), t = "Atlas: failed to add interface to queue:";
if (4 !== e.length) return window.Error && B.reportError(new Error(), t + " not enough arguments"), _r_();
if (4 === e.length && "function" != typeof e[2]) return window.Error && B.reportError(new Error(), t + " third argument must be a function"), _r_();
this.isLoaded ? this.getInterface.apply(this, e) :this.stack.push(e), _r_();
},
get:function(t) {
_i_("d0b:31bc3553");
var i = this, n = this.url;
if (r) return _r_();
t.get("channel") && (n = a(n, "channel", t.get("channel"))), e.getScript(n, function() {
for (_i_("d0b:2ad8b924"), t.trigger("api-load", t), i.isLoaded = !0; i.stack.length > 0; ) i.getInterface.apply(i, i.stack.pop());
_r_();
}), this.isLoading = !0, _r_();
},
append:function(e, t) {
_i_("d0b:3592aa1c");
var i = document.createElement("script"), n = this, o = n.url;
if (r) return _r_();
window[e] = function() {
for (_i_("d0b:943cfd9a"), t.trigger("api-load", t), n.isLoaded = !0; n.stack.length > 0; ) n.getInterface.apply(n, n.stack.pop());
_r_();
}, t.get("channel") && (o = a(o, "channel", t.get("channel"))), i.type = "text/javascript", i.src = o, document.body.appendChild(i), n.isLoading = !0, _r_();
},
getInterface:function(e, t, r, i) {
_i_("d0b:b2f051ae"), i = i || this.Interface, r.call(e, new i(t, e)), _r_();
}
};
function a(e, t, r) {
_i_("d0b:9e6b32191");
var i = new RegExp("\\b(" + t + "=).*?(&|$)");
if (e.search(i) >= 0) return _r_(e.replace(i, "$1" + r + "$2"));
return _r_(e + (e.indexOf("?") > 0 ? "&" :"?") + t + "=" + r);
}
return _r_(n);
}), B.atlas.define("provider-google-places", [ "provider-loader-v2", "util-env", "util-object", "provider-google-autocomplete" ], function(e, t, r, i) {
"use strict";
_i_("d0b:baa7f842");
var n = t.get("googleMapsUrl"), a = !1, o = B.require("promise");
function _(e, t) {
_i_("d0b:bbfb7a28");
var i = this;
i.ubber = t, B.atlas.require([ "google-places" ], function() {
_i_("d0b:9aec4e50");
for (var e = [].slice.call(arguments, 0); e.length > 0; ) r.extend(i, e.pop());
_r_();
}), _r_();
}
$.extend(_.prototype, i);
function s(t, r, i) {
return _i_("d0b:e9aa051b"), _r_(a ? o.resolve(new _(r, t)) :new e(n, t, "google").then(function() {
return _i_("d0b:800cf618"), a = !0, _r_(new _(r, t));
}));
}
return _r_({
init:s
});
}), B.atlas.define("styles-cartography", function() {
"use strict";
_i_("d0b:54811d3c");
var e = [ {
featureType:"poi.business",
stylers:[ {
visibility:"off"
} ]
} ];
return _r_({
STYLES:e
});
}), B.atlas.define("styles-default", function() {
"use strict";
_i_("d0b:649e7122");
var e = [ {
stylers:[ {
hue:"#feba02"
}, {
saturation:-60
} ]
}, {
featureType:"road",
elementType:"geometry",
stylers:[ {
lightness:50
}, {
visibility:"simplified"
} ]
}, {
featureType:"road",
elementType:"labels",
stylers:[ {
visibility:"off"
} ]
}, {
featureType:"water",
elementType:"all",
stylers:[ {
hue:"#003580"
}, {
visibility:"on"
} ]
}, {
featureType:"administrative.country",
elementType:"stroke",
stylers:[ {
color:"#f8f6ee"
}, {
weight:1
} ]
}, {
featureType:"administrative.country",
elementType:"labels.text",
stylers:[ {
color:"#001f54"
}, {
visibility:"on"
}, {
weight:.1
} ]
}, {
featureType:"administrative.province",
elementType:"geometry.stroke",
stylers:[ {
visibility:"on"
}, {
color:"#666666"
}, {
weight:.1
} ]
}, {
featureType:"administrative.locality",
elementType:"labels.text",
stylers:[ {
color:"#0053a7"
}, {
visibility:"on"
}, {
weight:.1
} ]
}, {
featureType:"administrative.locality",
elementType:"labels.icon",
stylers:[ {
color:"#0896ff"
} ]
}, {
featureType:"administrative.neighborhood",
stylers:[ {
visibility:"on"
} ]
}, {
featureType:"transit.line",
stylers:[ {
visibility:"off"
} ]
}, {
featureType:"poi",
elementType:"labels.text.fill",
stylers:[ {
color:"#666666"
} ]
}, {
featureType:"poi.business",
stylers:[ {
visibility:"off"
} ]
}, {
featureType:"poi.park",
stylers:[ {
visibility:"off"
}, {
color:"#00ff00"
}, {
saturation:-90
}, {
lightness:70
} ]
} ];
return _r_({
STYLES:e
});
}), B.atlas.define("styles-employee-map", function() {
"use strict";
_i_("d0b:3b8757c6");
var e = [ {
featureType:"road",
elementType:"geometry",
stylers:[ {
lightness:50
}, {
visibility:"off"
} ]
}, {
featureType:"road",
elementType:"labels",
stylers:[ {
visibility:"off"
} ]
} ];
return _r_({
STYLES:e
});
}), B.atlas.define("transitLayer", function() {
"use strict";
_i_("d0b:fe93727e");
var e;
function t(t) {
_i_("d0b:e5c07252"), this.Interface.TransitLayer && (e = e || new this.Interface.TransitLayer(t, this.Interface), e.add()), _r_();
}
function r(t) {
_i_("d0b:fd39de6c"), e && e.remove(), _r_();
}
return _r_({
addTransitLayer:t,
removeTransitLayer:r
});
}), B.atlas.define("vendor.tinyqueue", function() {
_i_("d0b:71931c32");
function e(r, i) {
if (_i_("d0b:9b13cda0"), !(this instanceof e)) return _r_(new e(r, i));
if (this.data = r || [], this.length = this.data.length, this.compare = i || t, this.length > 0) for (var n = (this.length >> 1) - 1; n >= 0; n--) this._down(n);
_r_();
}
function t(e, t) {
return _i_("d0b:2840383a"), _r_(t > e ? -1 :e > t ? 1 :0);
}
return e.prototype = {
push:function(e) {
_i_("d0b:88b0e802"), this.data.push(e), this.length++, this._up(this.length - 1), _r_();
},
pop:function() {
if (_i_("d0b:3c30891b"), 0 === this.length) return _r_(void 0);
var e = this.data[0];
return this.length--, this.length > 0 && (this.data[0] = this.data[this.length], this._down(0)), this.data.pop(), _r_(e);
},
peek:function() {
return _i_("d0b:609efb19"), _r_(this.data[0]);
},
_up:function(e) {
_i_("d0b:e85f3190");
for (var t = this.data, r = this.compare, i = t[e]; e > 0; ) {
var n = e - 1 >> 1, a = t[n];
if (r(i, a) >= 0) break;
t[e] = a, e = n;
}
t[e] = i, _r_();
},
_down:function(e) {
_i_("d0b:40ffc155");
for (var t = this.data, r = this.compare, i = this.length >> 1, n = t[e]; i > e; ) {
var a = (e << 1) + 1, o = a + 1, _ = t[a];
if (o < this.length && r(t[o], _) < 0 && (a = o, _ = t[o]), r(_, n) >= 0) break;
t[e] = _, e = a;
}
t[e] = n, _r_();
}
}, _r_(e);
}), B.atlas.define("vendor.polylabel", function() {
_i_("d0b:ab80c8e2");
var e = B.atlas.require("vendor.tinyqueue");
function t(t, n, o) {
_i_("d0b:7a6de6bd"), n = n || 1;
for (var _, s, d, c, l = 0; l < t[0].length; l++) {
var u = t[0][l];
(!l || u[0] < _) && (_ = u[0]), (!l || u[1] < s) && (s = u[1]), (!l || u[0] > d) && (d = u[0]), (!l || u[1] > c) && (c = u[1]);
}
var f = d - _, b = c - s, h = Math.min(f, b), p = h / 2, g = new e(null, r);
if (0 === h) return _r_([ _, s ]);
for (var m = _; d > m; m += h) for (var v = s; c > v; v += h) g.push(new i(m + p, v + p, p, t));
var y = a(t), k = new i(_ + f / 2, s + b / 2, 0, t);
k.d > y.d && (y = k);
for (var w = g.length; g.length; ) {
var I = g.pop();
if (I.d > y.d && (y = I, o && console.log("found best %d after %d probes", Math.round(1e4 * I.d) / 1e4, w)), I.max - y.d <= n) continue;
p = I.h / 2, g.push(new i(I.x - p, I.y - p, p, t)), g.push(new i(I.x + p, I.y - p, p, t)), g.push(new i(I.x - p, I.y + p, p, t)), g.push(new i(I.x + p, I.y + p, p, t)), w += 4;
}
return o && (console.log("num probes: " + w), console.log("best distance: " + y.d)), _r_([ y.x, y.y ]);
}
function r(e, t) {
return _i_("d0b:cbf63381"), _r_(t.max - e.max);
}
function i(e, t, r, i) {
_i_("d0b:f59ed959"), this.x = e, this.y = t, this.h = r, this.d = n(e, t, i), this.max = this.d + this.h * Math.SQRT2, _r_();
}
function n(e, t, r) {
_i_("d0b:d789a1e8");
for (var i = !1, n = 1 / 0, a = 0; a < r.length; a++) for (var _ = r[a], s = 0, d = _.length, c = d - 1; d > s; c = s++) {
var l = _[s], u = _[c];
l[1] > t != u[1] > t && e < (u[0] - l[0]) * (t - l[1]) / (u[1] - l[1]) + l[0] && (i = !i), n = Math.min(n, o(e, t, l, u));
}
return _r_((i ? 1 :-1) * Math.sqrt(n));
}
function a(e) {
_i_("d0b:f68a0af3");
for (var t = 0, r = 0, n = 0, a = e[0], o = 0, _ = a.length, s = _ - 1; _ > o; s = o++) {
var d = a[o], c = a[s], l = d[0] * c[1] - c[0] * d[1];
r += (d[0] + c[0]) * l, n += (d[1] + c[1]) * l, t += 3 * l;
}
if (0 === t) return _r_(new i(a[0][0], a[0][1], 0, e));
return _r_(new i(r / t, n / t, 0, e));
}
function o(e, t, r, i) {
_i_("d0b:dbf61a4e");
var n = r[0], a = r[1], o = i[0] - n, _ = i[1] - a;
if (0 !== o || 0 !== _) {
var s = ((e - n) * o + (t - a) * _) / (o * o + _ * _);
s > 1 ? (n = i[0], a = i[1]) :s > 0 && (n += o * s, a += _ * s);
}
return o = e - n, _ = t - a, _r_(o * o + _ * _);
}
return _r_(t);
}), B.atlas.define("provider-mapbox-autocomplete-result", [ "util-object", "util-array", "util-getset" ], function(e, t, r) {
"use strict";
_i_("d0b:17ae43a8");
var i = [ "place", "region", "country" ];
function n(e, t) {
_i_("d0b:6095a069");
for (var r = [ e ], n = 0; n < t.length; n++) {
var a = t[n], o = a.id.split(".")[0];
i.indexOf(o) > -1 && r.push(a.text);
}
return _r_(r.join(", "));
}
function a(t, i) {
_i_("d0b:641e8ba8");
var a = n(t.text, t.context), o = this, _ = {
map:i,
data:{
id:t.id,
title:t.text,
address:a,
description:a,
matched_substrings:[],
types:t.place_type,
longitude:t.center[0],
latitude:t.center[1]
}
};
e.extend(_, t), e.extend(o, r.call(o, _)), _r_();
}
return a.prototype.getDetails = function(e) {
_i_("d0b:ffbda587");
var t = this.get("map"), r = this.get("id");
return _r_(t.getPlaceDetails({
placeId:r
}, e));
}, _r_(a);
}), B.atlas.define("provider-mapbox-autocomplete", [ "jQuery", "util-array", "provider-mapbox-autocomplete-result", "util-env" ], function(e, t, r, i) {
"use strict";
_i_("d0b:7e4d5580");
function n(e, i) {
_i_("d0b:ec307f58");
var n = [];
return e && e.results && e.results.features && e.results.features.length > 0 && t.each(e.results.features, function(e) {
_i_("d0b:3816dea5"), e.id && n.push(new r(e, i)), _r_();
}), _r_(n);
}
function a(e, t, r) {
_i_("d0b:743f6c89");
var i = this;
e.lat && e.lon && (e.proximity = L.latLng(e.lat, e.lon)), L.mapbox.geocoder("mapbox.places").query(e, function(e, a) {
_i_("d0b:84810010"), e ? r(e) :t(n(a, i)), _r_();
}), _r_();
}
return _r_({
autocomplete:a
});
}), B.atlas.define("provider-mapbox-places", [ "provider-loader-v2", "util-env", "provider-mapbox-autocomplete" ], function(e, t, r) {
"use strict";
_i_("d0b:f5f43123");
var i = t.get("mapboxURL"), n = !1, a = B.require("promise");
function o(e, r) {
_i_("d0b:96fde4a1");
var i = this;
i.ubber = r, L.mapbox.accessToken = t.get("mapboxAccessToken"), _r_();
}
$.extend(o.prototype, r);
function _(t, r, _) {
return _i_("d0b:42911f3e"), _r_(n ? a.resolve(new o(r, t)) :new e(i, t, "provider-mapbox-places").then(function() {
return _i_("d0b:800cf6181"), n = !0, _r_(new o(r, t));
}));
}
return _r_({
init:_
});
}), booking.env.enable_scripts_tracking && (booking.env.scripts_tracking.atlas.run = !0);